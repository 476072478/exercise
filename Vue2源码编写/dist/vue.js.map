{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalApi.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 静态方法\r\nconst strats = {}\r\nconst LIFECYCLE = [\r\n    'beforeCreate',\r\n    'created'\r\n]\r\nLIFECYCLE.forEach(hook => strats[hook] = function (p, c) {\r\n    // {} {created:function(){}} => {created:[fn]}  第一次合并\r\n    // {created:[fn]} {created:function(){}} => {created:[fn,fn]}\r\n    if (c) {\r\n        // 如果儿子有父亲有，父亲肯定是数组，让父亲和儿子拼在一起\r\n        if (p) {\r\n            return p.concat(c)\r\n        } else {\r\n            // 第一次，父亲没有，儿子有，将儿子包装成数组\r\n            return [c]\r\n        }\r\n    } else {\r\n        // 如果儿子没有，直接返回父亲\r\n        return p\r\n    }\r\n})\r\nexport function mergeOptions(parent, child) {\r\n    const options = {}\r\n    for (let key in parent) { // 循环老的\r\n        mergeField(key)\r\n    }\r\n    for (let key in child) { // 循环新的\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n    function mergeField(key) {\r\n        // 策略模式，用策略模式减少if，else\r\n        if (strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key])\r\n        } else {\r\n            // 如果不在策略中则以儿子为主\r\n            options[key] = child[key] || parent[key] //优先采用儿子，再采用父亲\r\n        }\r\n    }\r\n    return options\r\n}","import { mergeOptions } from \"./utils\"\r\nexport function initGlobalAPI(Vue) {\r\n    Vue.options = {}\r\n    Vue.mixin = function (mixin) {\r\n        // 我们期望将用户的选项和全局的options进行合并\r\n        this.options = mergeOptions(this.options, mixin)\r\n        return this\r\n    }\r\n    Vue.extend = function (options) {\r\n        function Sub(options = {}) { // 最终使用一个组件，就是new一个实例\r\n            this._init(options) // 默认对子类进行初始化\r\n        }\r\n        Sub.prototype = Object.create(Vue.prototype) // Sub.prototype._proto_ =  Vue.prototype\r\n        Sub.prototype.constructor = Sub\r\n        Sub.options = options; // 保存用户传递的选项\r\n        return Sub\r\n    }\r\n    Vue.options.components = {}\r\n    Vue.component = function (id, definition) {\r\n        definition = typeof definition\r\n    }\r\n}","// 标签名 a-aaa\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 命名空间标签 aa:aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 开始标签-捕获标签名\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 结束标签-匹配标签结尾的 </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 匹配标签结束的 >\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配 {{ }} 表达式\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\nfunction parseHTML(html) {\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    let root //树的操作，需要根据开始标签和结束标签产生一个树\r\n    // 如何构建树的父子关系\r\n    let stack = []\r\n    function creatASTElement(tagName, attrs) {\r\n        return {\r\n            tag: tagName,\r\n            attrs,\r\n            children: [],\r\n            parent: null,\r\n            type: 1\r\n        }\r\n    }\r\n    function start(tagName, attrs) {\r\n        let element = creatASTElement(tagName, attrs);\r\n        if (root == null) {\r\n            root = element\r\n        }\r\n        let parent = stack[stack.length - 1]\r\n        if (parent) {\r\n            element.parent = parent //让这个元素记住自己的父亲\r\n            parent.children.push(element) // 让这个元素记住自己的儿子\r\n        }\r\n        stack.push(element)\r\n    }\r\n    function end(tagName) {\r\n        stack.pop()\r\n    }\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, '')\r\n        if (text) {\r\n            let parent = stack[stack.length - 1]\r\n            parent.children.push({\r\n                type: 3,\r\n                text\r\n            })\r\n        }\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], //标签名\r\n                attrs: [],\r\n            };\r\n            advance(start[0].length);\r\n            let end, attr;\r\n            // 如果不是开始标签的结束,那就一直匹配\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n                advance(attr[0].length);\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n                return match\r\n            }\r\n            return false; //不是开始标签\r\n        }\r\n    }\r\n    while (html) {\r\n        // 如果textEnd为0,说明是一个开始标签,或一个结束标签\r\n        let textEnd = html.indexOf(\"<\"); //如果indexOf中的索引是0，则说明是个标签\r\n        if (textEnd === 0) {\r\n            const startTagMatch = parseStartTag();\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue\r\n            }\r\n            let matches\r\n            if (matches = html.match(endTag)) {//不是开始就会走到结束\r\n                end(matches[1])\r\n                advance(matches[0].length)\r\n                continue\r\n            }\r\n        }\r\n        let text\r\n        if (textEnd >= 0) {\r\n            text = html.substring(0, textEnd)\r\n        }\r\n        if (text) {\r\n            advance(text.length)\r\n            chars(text)\r\n        }\r\n    }\r\n    return root\r\n}\r\nfunction getProps(attrs) {\r\n    let str = ''\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        // style = 'color:red;background:blue'\r\n        if (attr.name == 'style') { // style:'{color:red,background:blue}'\r\n            let obj = {}\r\n            attr.value.split(';').reduce((memo, current) => {\r\n                let [key, value] = current.split(':')\r\n                memo[key] = value\r\n                return obj\r\n            }, obj)\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nfunction gen(child) {\r\n    if (child.type === 1) {\r\n        return getCode(child)\r\n    } else {\r\n        let text = child.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})` //不带表达式的\r\n        } else {\r\n            let tokens = []\r\n            let match\r\n            //exec 遇到全局匹配有lastIndex问题，每次匹配前需要将lastIndex置为0\r\n            let startIndex = defaultTagRE.lastIndex = 0\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let endIndex = match.index;//匹配到索引\r\n                if (endIndex > startIndex) {\r\n                    tokens.push(JSON.stringify(text.substring(startIndex, endIndex)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                startIndex = endIndex + match[0].length\r\n            }\r\n            if (startIndex < text.length) { //将最后的尾巴也丢进去\r\n                tokens.push(JSON.stringify(text.slice(startIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction getChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\nfunction getCode(ast) {\r\n    // 字符串拼接，拼接成想要的就行\r\n    let code\r\n    code = `_c('${ast.tag}',${ast.attrs.length ? getProps(ast.attrs) : 'undefined'}${ast.children ? ',' + getChildren(ast.children) : ''})`\r\n    //  _c('div',{className:'xxx'},createTextVnode('hello world'))\r\n    return code\r\n}\r\n// 将模板变成render函数，通过with+new Function()的方式让\r\nexport function compileToFunction(template) {\r\n    // 将template转化成ast语法树\r\n    let ast = parseHTML(template);\r\n    // 通过ast语法树转成render函数\r\n    let code = getCode(ast)\r\n    // 生产render方法（render方法执行后的返回结果就是虚拟dom）\r\n    const render = new Function(`with(this){return ${code}}`)\r\n    return render\r\n}\r\n","// 获取数组的原型\r\nlet oldArrayProto = Array.prototype\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function (...args) {\r\n        const ob = this.__ob__\r\n        const result = oldArrayProto[method].call(this, ...args)\r\n        let inserted\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n            default:\r\n                break\r\n        }\r\n        if(inserted){\r\n            ob.observeArray(inserted)\r\n        }\r\n        // 走到这里\r\n        ob.dep.notify() //数组变化了，通知对应的watcher实现更新\r\n        return result\r\n    }\r\n}) \r\n","let id = 0\r\nexport default class Dep{\r\n    constructor(){\r\n        this.id = id++  //属性的dep要收集watcher\r\n        this.subs = []  //这里存放\r\n    }\r\n    depend(){\r\n        // 这里我们不希望放重复的wacher，而且刚才只是一个单向的关系\r\n        // watcher记录dep\r\n        // this.subs.push(Dep.target)\r\n        Dep.target.addDep(this)  //让watcher记住dep\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n    notify(){\r\n        this.subs.forEach(watcher => watcher.update()) //告诉watcher要更新了\r\n    }\r\n}\r\nlet stack = []\r\nexport function pushTarget(watcher){\r\n    stack.push(watcher)\r\n    Dep.target = watcher\r\n}\r\nexport function popTarget(){\r\n    stack.pop()\r\n    Dep.target = stack[stack.length - 1]\r\n}\r\nDep.target = null","/*\r\n * @Author: 小唐 476072478@qq.com\r\n * @Date: 2023-03-03 10:51:27\r\n * @LastEditors: 小唐 476072478@qq.com\r\n * @LastEditTime: 2023-04-18 17:52:12\r\n * @FilePath: \\Vue2源码编写\\src\\observe\\index.js\r\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n */\r\nimport { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\nclass Observe {\r\n  constructor(data) {\r\n    this.dep = new Dep(); //所有对象都要增加dep\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false, // 不可枚举\r\n    });\r\n    if (Array.isArray(data)) {\r\n      // 数组不做劫持，太浪费性能，重写数组方法\r\n      // 需要保留数组原有的特性，并且能够重写部分方法\r\n      data.__proto__ = newArrayProto;\r\n      this.observeArray(data);\r\n    } else {\r\n      this.walk(data);\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 循环对象，对属性依次劫持\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  observeArray(data) {\r\n    // 数组里面的{}需要监测到\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\nfunction dependArray(value) {\r\n  for (let i = 0; i < value.length; i++) {\r\n    value[i].__ob__ && value[i].__ob__.dep.depend();\r\n    if (Array.isArray(value[i])) {\r\n      dependArray(value[i]);\r\n    }\r\n  }\r\n}\r\nexport function defineReactive(target, key, value) {\r\n  //闭包\r\n  let childob = observe(value); //对所有对象都进行属性劫持\r\n  let dep = new Dep(); //每一个属性都有一个dep\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      if (Dep.target) {\r\n        dep.depend(); //让这个属性的收集器记住当前过程\r\n        if (childob) {\r\n          childob.dep.depend();\r\n          if (Array.isArray(value)) {\r\n            dependArray(value);\r\n          }\r\n        }\r\n      }\r\n      return value;\r\n    },\r\n    set(newvalue) {\r\n      if (value === newvalue) return;\r\n      observe(newvalue);\r\n      value = newvalue;\r\n      dep.notify(); //通知更新\r\n    },\r\n  });\r\n}\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== \"object\" || data === null) {\r\n    return null;\r\n  }\r\n  if (data.__ob__ instanceof Observe) {\r\n    //说明这个数据已经被代理\r\n    return data.__ob__;\r\n  }\r\n  // 如果一个对象已经被劫持，那么就不用被劫持\r\n  return new Observe(data);\r\n}\r\n","import Dep, { popTarget, pushTarget } from './dep'\r\n\r\nlet queeu = []\r\nlet has = {}\r\nlet pending = false //防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queeu.slice(0)\r\n    queeu = []\r\n    has = {}\r\n    pending = false\r\n    flushQueue.forEach(q => q.run()) //在刷新的过程中可能还有新的watcher，重新放到queue中\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\nfunction flushCallbacks() {\r\n    waiting = false\r\n    let cbs = callbacks.slice(0)\r\n    callbacks = []\r\n    cbs.forEach(cb => cb())\r\n}\r\n// nextTick采用的是优雅降级的方式\r\nlet timeFunc\r\nif (Promise) {\r\n    timeFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if (MutationObserver) {\r\n    let observer = new MutationObserver(flushCallbacks)\r\n    let textNode = createTextNode(1)\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    })\r\n    timeFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if (setImmediate) {\r\n    timeFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else {\r\n    setTimeout(() => {\r\n        flushCallbacks()\r\n    }, 0);\r\n}\r\nexport function nextTick(cb) { //先内部的还是先用户的？\r\n    callbacks.push(cb)\r\n    if (!waiting) {\r\n        timeFunc() //最后一起刷新\r\n    }\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id\r\n    if (!has[id]) {\r\n        queeu.push(watcher)\r\n        has[id] = true\r\n        // 不管update执行多少次，但是最终只执行一次\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue);\r\n            pending = true\r\n        }\r\n    }\r\n}\r\n\r\nlet id = 0\r\nclass Watcher {\r\n    constructor(vm, exprOrFn, options, cb) { // 不同组件有不同watcher\r\n        this.id = id++\r\n        this.renderWatcher = options //是一个渲染过程\r\n        if (typeof exprOrFn === 'string') {\r\n            this.getter = function () {\r\n                return vm[exprOrFn]\r\n            }\r\n        } else {\r\n            this.getter = exprOrFn // getter意味着调用这个函数会发生取值操作\r\n        }\r\n        this.deps = [] //后续我们实现计算属性和清理工作会用到\r\n        this.depsId = new Set()\r\n        this.lazy = options.lazy\r\n        this.dirty = this.lazy //缓存\r\n        this.cb = cb\r\n        this.vm = vm\r\n        this.user = options.user // 标识是否是用户自己的watcher\r\n        this.value = this.lazy ? undefined : this.get()\r\n    }\r\n    evaluate() {\r\n        this.value = this.get()\r\n        this.dirty = false\r\n    }\r\n    get() {\r\n        pushTarget(this) //静态属性只有一份\r\n        let value = this.getter.call(this.vm) //会去vm上取值\r\n        popTarget()\r\n        return value\r\n    }\r\n    addDep(dep) { //一个组件对应多个属性，重复的属性也不用记录\r\n        let id = dep.id\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep)\r\n            this.depsId.add(id) //watcher已经记住dep，并且已经去重\r\n            dep.addSub(this)\r\n        }\r\n    }\r\n    depend() {\r\n        let i = this.deps.length\r\n        while (i--) {\r\n            this.deps[i].depend() //让计算属性watcher也收集渲染过程\r\n        }\r\n    }\r\n    update() {\r\n        if (this.lazy) {\r\n            //如果是计算属性,依赖的值变化了，就标值计算属性是脏值\r\n            this.dirty = true\r\n        } else {\r\n            queueWatcher(this) //把当前的watcher暂存起来\r\n        }\r\n    }\r\n    run() {\r\n        let oldValue = this.value\r\n        let newValue = this.get()\r\n        if (this.user) {\r\n            this.cb.call(this.vm,oldValue, newValue)\r\n        }\r\n    }\r\n}\r\n// 需要给每个属性增加一个dep，目的就是收集watcher\r\n// 一个组件中有多少属性（n个属性对应一个组件） n个dep对应一个watcher\r\n// 1个属性对应多个组件 1个dep对应多个watcher\r\n// 多对多的关系\r\nexport default Watcher","import { observe } from \"./observe/index\";\r\nimport Watcher, { nextTick } from \"./observe/watcher\";\r\nimport Dep from \"./observe/dep\";\r\nexport function initState(vm) {\r\n    // 对数据进行劫持\r\n    const opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm)\r\n    }\r\n}\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    for (let key in watch) {\r\n        let handler = watch[key]\r\n        if (Array.isArray(watch)) {\r\n            for (let i = 0; i < watch.length; i++) {\r\n                creatWatch(vm, key, handler[i])\r\n            }\r\n        } else {\r\n            creatWatch(vm, key, handler)\r\n        }\r\n    }\r\n}\r\nfunction creatWatch(vm, key, handler) {\r\n    // 字符串,函数\r\n    if (typeof handler === 'string') {\r\n        handler = vm[handler]\r\n    }\r\n    return vm.$watch(key, handler)\r\n}\r\nfunction Proxy(vm, target, key) {\r\n    // 使用时候的劫持\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newvalue) {\r\n            vm[target][key] = newvalue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    // 对data进行劫持\r\n    let data = vm.$options.data;\r\n    data = typeof data == \"function\" ? data.call(vm) : data;\r\n    vm._data = data;\r\n    // 将vm.data 用vm代理\r\n    for (let key in data) {\r\n        Proxy(vm, \"_data\", key);\r\n    }\r\n    observe(data);\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed\r\n    const watchers = vm.computedWatcher = {} //将计算属性watcher保存到vm上\r\n    for (let key in computed) {\r\n        let userDef = computed[key]\r\n        // 我们需要监控计算属性中get的变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true })\r\n        defineComputed(vm, key, userDef)\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    const setter = userDef.set || (() => { })\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGeeter(key),\r\n        set: setter\r\n    })\r\n}\r\nfunction createComputedGeeter(key) {\r\n    // 我们需要监测是否要执行这个getter\r\n    return function () {\r\n        const watcher = this.computedWatcher[key]\r\n        if (watcher.dirty) {\r\n            // 如果是脏的，则执行\r\n            watcher.evaluate()\r\n        }\r\n        if (Dep.target) { //计算属性出栈后还有渲染过程，我应该让计算属性watcher里面的属性也去收集上一层watcher\r\n            watcher.depend()\r\n        }\r\n        return watcher.value\r\n    }\r\n}\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick;\r\n    // watch最终调用的是这个方法\r\n    Vue.prototype.$watch = function (exprOrFn, cb) {\r\n        new Watcher(this, exprOrFn, { user: true }, cb)\r\n    }\r\n}","const isReservedTag = (tag)=>{\r\n    return ['a','button','p','div','ul','li','span'].includes(tag)\r\n}\r\nexport function createElement(vm,tag,data={},...children){\r\n    if(isReservedTag(tag)){\r\n        return vnode(vm,tag,data,children,data.key,null)\r\n    }else{\r\n        // 创造一个组件的虚拟节点（包含组件的构造函数）\r\n        // let Ctor = vm.$options.component[tag]\r\n        // // Ctor就是组件的定义，可能是一个Sub类，还有可能是组件的obj选项\r\n        // return createComponentVnode(vm)\r\n    }\r\n}\r\nfunction createComponentVnode(vm,tag,key,data,children,Ctor){\r\n    \r\n}\r\nexport function createTextNode(vm,text){\r\n    return vnode(vm,null,null,null,null,text)\r\n}\r\nfunction vnode(vm,tag,data,children,key,text){\r\n    return {\r\n        vm,tag,data,children,key,text\r\n    }\r\n}\r\nexport function isSameVnode(vnode1,vnode2){\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key\r\n}","import { isSameVnode } from \"./index\";\r\n\r\nexport function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if (typeof tag === \"string\") {\r\n        //元素\r\n        vnode.el = document.createElement(tag); //后续我们需要diff算法，拿虚拟节点比对后更新dom\r\n        patchProps(vnode.el, {}, data);\r\n        children.forEach((children) => {\r\n            // 递归渲染\r\n            vnode.el.appendChild(createElm(children));\r\n        });\r\n    } else {\r\n        // 文本\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el; //从根虚拟节点创建真实节点\r\n}\r\nfunction patchProps(el, oldprops = {}, props = {}) {\r\n    // 老的属性中有，新的没有，要删除老的\r\n    let oldStyles = oldprops.style || {}\r\n    let newStyles = props.style || {}\r\n    for (let key in oldStyles) { // 老的样式中有，新的样式中没有则删除\r\n        if (!newStyles[key]) {\r\n            el.style[key] = ''\r\n        }\r\n    }\r\n    for (let key in oldprops) { // 老的属性中有，新的没有删除属性\r\n        if (!props[key]) {\r\n            el.removeAttribute(key)\r\n        }\r\n    }\r\n    for (let key in props) { // 用新的覆盖老的\r\n        if (key === \"style\") {\r\n            for (let styleName in props[key]) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\nexport function patch(oldVnode, vnode) {\r\n    const isRealElement = oldVnode && oldVnode.nodeType; // 如果有说明他是一个元素\r\n    if (isRealElement) {\r\n        const oldElm = oldVnode;\r\n        // 需要获取父节点，将当前节点的下一个元素作为参照物将他插入，之后删除老节点\r\n        const parentNode = oldElm.parentNode;\r\n        let el = createElm(vnode);\r\n        parentNode.insertBefore(el, oldElm.nextSibling);\r\n        parentNode.removeChild(oldElm);\r\n        return el;\r\n    } else {\r\n        // diff算法\r\n        // 两个节点不是同一个节点，直接删除老的换上新的（没有比对了）\r\n        // 两个节点是同一个节点，（判断节点的tag和节点的key） 比较两个节点的属性是否有差异（复用老的节点，将差异的属性更新）\r\n        // 节点比较完毕后，需要比较两个节点的儿子\r\n        patchVonde(oldVnode, vnode)\r\n    }\r\n}\r\nfunction mountChildren(el, newChildren) {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n        let child = newChildren[i]\r\n        el.appendChild(createElm(child))\r\n    }\r\n}\r\nfunction patchVonde(oldVnode, vnode) {\r\n    if (!isSameVnode(oldVnode, vnode)) {\r\n        let el = createElm(vnode)\r\n        oldVnode.el.parentNode.replaceChild(el, oldVnode.el)\r\n        return el\r\n    }\r\n    // 文本的情况，文本我们期望比较一下文本的内容\r\n    let el = vnode.el = oldVnode.el // 复用老节点的元素\r\n    if (!oldVnode.tag) { // 是文本\r\n        if (oldVnode.text !== vnode.text) {\r\n            el.textContent = vnode.text\r\n        }\r\n        return\r\n    }\r\n    // console.log(oldVnode, vnode)\r\n    // 是标签 标签我们需要比对标签的属性\r\n    patchProps(el, oldVnode.data, vnode.data)\r\n\r\n    // 比较儿子节点，一方有儿子，一方没儿子\r\n    // 两方都有儿子\r\n    let oldChildren = oldVnode.children || []\r\n    let newChildren = vnode.children || []\r\n    if (oldChildren.length > 0 && newChildren.length > 0) {\r\n        // 两方都有儿子\r\n        updateChildren(el, oldChildren, newChildren)\r\n    } else if (newChildren.length > 0) {\r\n        mountChildren(el, newChildren)\r\n    } else if (oldChildren.length > 0) {\r\n        el.innerHTML = ''\r\n    }\r\n    return el\r\n}\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n    // 双指针\r\n    let oldStartIndex = 0\r\n    let newStartIndex = 0\r\n    let oldEndIndex = oldChildren.length - 1\r\n    let newEndIndex = newChildren.length - 1\r\n    let oldStartVnode = oldChildren[0]\r\n    let newStartVnode = newChildren[0]\r\n    let oldEndVnode = oldChildren[oldEndIndex]\r\n    let newEndVnode = newChildren[newEndIndex]\r\n    function makeIndexByKey(children) {\r\n        let map = {}\r\n        children.forEach((child, index) => {\r\n            map[child.key] = index\r\n        })\r\n        return map\r\n    }\r\n    let map = makeIndexByKey(oldChildren)\r\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) { // 有任何一个不满足则停止\r\n        if (!oldStartVnode) {\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n        } else if (!oldEndVnode) {\r\n            oldEndVnode = oldChildren[--oldStartIndex]\r\n        }\r\n        // 双方有一方头指针，大于尾部指针则停止循环 \r\n        // 比较开头节点\r\n        if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n            patchVonde(oldStartVnode, newStartVnode) //如果是相同节点则递归比较子节点\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n            newStartVnode = newChildren[++newStartIndex]\r\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n            patchVonde(oldEndVnode, newEndVnode)\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n            newEndVnode = newChildren[--newEndIndex]\r\n            // 比较尾部节点\r\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n            patchVonde(oldEndVnode, newStartVnode)\r\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el)\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n            newStartVnode = newChildren[++newStartIndex]\r\n            // 交叉比对 abcd - > dabc\r\n        } else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n            patchVonde(oldStartVnode, newEndVnode)\r\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n            newEndVnode = newChildren[--newEndIndex]\r\n            // 交叉比对 dabc - > abcd\r\n        } else {\r\n            // 乱序比对，尽可能的复用原来的dom\r\n            // 根据老的列表做一个映射关系，用新的去找，找到则移动，找不到则添加，最后多余的就删除\r\n            let moveIndex = map[newStartVnode.key] //如果拿到则说明是我要移动的索引\r\n            if (moveIndex !== undefined) {\r\n                let moveVnode = oldChildren[moveIndex] // 找到对应的虚拟节点\r\n                el.insertBefore(moveVnode.el, oldStartVnode.el)\r\n                oldChildren[moveIndex] = undefined // 不能删，删则导致数组塌陷，表示这个节点已经移动走了\r\n                patchVonde(moveVnode, newStartVnode)\r\n            } else {\r\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el)\r\n            }\r\n            newStartVnode = newChildren[++newStartIndex]\r\n        }\r\n    }\r\n    if (newStartIndex <= newEndIndex) { // 新得多了，多余的就插入进去\r\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n            let childEL = createElm(newChildren[i])\r\n            // 这里可能是向后追加，还有可能向前追追加\r\n            let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null  // 获取下一个元素\r\n            el.insertBefore(childEL, anchor); // anchor为null的时候则会认为是appednChild\r\n        }\r\n    }\r\n    if (oldStartIndex <= oldEndIndex) { // 老的多了，多的就删除\r\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n            if (oldChildren[i]) {\r\n                let childEL = oldChildren[i].el\r\n                el.removeChild(childEL)\r\n            }\r\n        }\r\n    }\r\n}\r\n// 每次更新页面的话，dom结果是不会变的，我调用render方法时，数据变化了会根据数据渲染成新的虚拟节点，用新的虚拟节点渲染dom","import Watcher from \"./observe/watcher\"\r\nimport { createElement } from \"./vdom/index\"\r\nimport { createTextNode } from \"./vdom/index\"\r\nimport { patch } from \"./vdom/patch\"\r\n\r\nexport function lifeCycleMixin(Vue) {\r\n    Vue.prototype._c = function () {\r\n        // 创造对应的虚拟节点，进行渲染\r\n        return createElement(this,...arguments)\r\n    }\r\n    Vue.prototype._v = function () {\r\n        return createTextNode(this,...arguments)\r\n    }\r\n    Vue.prototype._s = function (value) { //将数据转化成字符串，因为使用变量对应的结果可能是一个对象\r\n        if(typeof value === 'object' && value !== null){\r\n            return JSON.stringify(value)\r\n        }\r\n        return value\r\n    }\r\n    Vue.prototype._render = function () {\r\n        const vm = this\r\n        const render = vm.$options.render\r\n        let vnode = render.call(vm)\r\n        return vnode\r\n    }\r\n    Vue.prototype._update = function (vnode) { //将虚拟节点变成真实节点\r\n        // 将Vnode渲染到el元素中\r\n        const vm = this\r\n        const el = vm.$el\r\n        const prevVnode = vm._vnode\r\n        vm._vnode = vnode //把组件第一次产生的虚拟节点保存到_vnode上\r\n        if(prevVnode){\r\n            // 之前渲染过了\r\n            vm.$el = patch(prevVnode,vnode)\r\n        }else{\r\n            vm.$el = patch(el,vnode)\r\n        }\r\n    }\r\n}\r\nexport function mountComponent(vm, el) {\r\n    //实现页面的挂载流程\r\n    // 先将el挂载到实例上\r\n    vm.$el = el\r\n    const updataComponent = () => {\r\n        // 需要调用生成的render函数获取到虚拟节点 -》 生成真实的dom\r\n        vm._update(vm._render())\r\n    }\r\n    new Watcher(vm,updataComponent,true) \r\n    //如果稍后数据变化，也调用这个函数重新执行\r\n    // 观察者模式\r\n}","/*\r\n * @Author: 小唐 476072478@qq.com\r\n * @Date: 2023-03-03 09:58:34\r\n * @LastEditors: 小唐 476072478@qq.com\r\n * @LastEditTime: 2023-04-18 16:10:58\r\n * @FilePath: \\Vue2源码编写\\src\\init.js\r\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n */\r\n\r\nimport { compileToFunction } from \"./compiler/index\";\r\nimport { initState } from \"./state\";\r\nimport {mountComponent} from './lifecycle'\r\nimport { mergeOptions } from \"./utils\";\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        // 用于初始化操作\r\n        const vm = this;\r\n        // debugger\r\n        vm.$options = mergeOptions(this.constructor.options,options); // 将用户的选项挂载到实例上\r\n        // 初始化状态，初始化计算属性，watcher\r\n        initState(vm);\r\n        // todo...\r\n        if (options.el) {\r\n            vm.$mount(options.el);\r\n        }\r\n    };\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        if (!ops.render) {\r\n            // 先查找有没有render函数\r\n            let template;\r\n            if (!ops.template && el) {\r\n                // 如果没有render函数有el\r\n                template = el.outerHTML;\r\n            } else {\r\n                // 写了templat，就用写了的template\r\n                if(el){\r\n                    template = ops.template;\r\n                }\r\n            }\r\n            if(template){\r\n                // 这里需要对模板进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n            }\r\n        }\r\n        // 将实例挂载到el上\r\n        mountComponent(vm,el)\r\n    };\r\n}\r\n","import { initGlobalAPI } from \"./globalApi\";\r\nimport { initMixin } from \"./init\";\r\nimport { lifeCycleMixin } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\nfunction Vue(options) {\r\n    this._init(options);\r\n}\r\ninitGlobalAPI(Vue)\r\ninitStateMixin(Vue)\r\ninitMixin(Vue); // 扩展了init方法\r\nlifeCycleMixin(Vue);\r\nexport default Vue;"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","extend","Sub","arguments","length","undefined","_init","prototype","Object","create","constructor","components","component","id","definition","_typeof","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","parseHTML","html","advance","n","substring","root","stack","creatASTElement","tagName","attrs","tag","children","type","start","element","push","end","pop","chars","text","replace","parseStartTag","match","attr","name","value","textEnd","indexOf","startTagMatch","matches","getProps","str","_loop","i","obj","split","reduce","memo","current","_current$split","_current$split2","_slicedToArray","JSON","stringify","slice","gen","getCode","test","tokens","startIndex","lastIndex","exec","endIndex","index","trim","join","getChildren","map","ast","code","compileToFunction","template","render","Function","oldArrayProto","Array","newArrayProto","methods","method","_oldArrayProto$method","ob","__ob__","_len","args","_key","result","call","apply","inserted","observeArray","dep","notify","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","update","pushTarget","popTarget","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","childob","get","set","newvalue","queeu","has","pending","flushSchedulerQueue","flushQueue","q","run","callbacks","waiting","flushCallbacks","cbs","cb","timeFunc","Promise","resolve","then","MutationObserver","observer","textNode","createTextNode","characterData","textContent","setImmediate","setTimeout","nextTick","queueWatcher","Watcher","vm","exprOrFn","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","evaluate","add","oldValue","newValue","initState","opts","$options","initData","computed","initComputed","watch","initWatch","handler","creatWatch","$watch","Proxy","_data","watchers","computedWatcher","userDef","fn","defineComputed","setter","createComputedGeeter","initStateMixin","$nextTick","isReservedTag","includes","createElement","vnode","isSameVnode","vnode1","vnode2","createElm","el","document","patchProps","appendChild","oldprops","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVnode","isRealElement","nodeType","oldElm","parentNode","insertBefore","nextSibling","removeChild","patchVonde","mountChildren","newChildren","replaceChild","oldChildren","updateChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEL","anchor","lifeCycleMixin","_c","_v","_s","_render","_update","$el","prevVnode","_vnode","mountComponent","updataComponent","initMixin","$mount","querySelector","ops","outerHTML"],"mappings":"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"}