{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalApi.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 静态方法\r\nconst strats = {}\r\nconst LIFECYCLE = [\r\n    'beforeCreate',\r\n    'created'\r\n]\r\nLIFECYCLE.forEach(hook => strats[hook] = function (p, c) {\r\n    // {} {created:function(){}} => {created:[fn]}  第一次合并\r\n    // {created:[fn]} {created:function(){}} => {created:[fn,fn]}\r\n    if (c) {\r\n        // 如果儿子有父亲有，父亲肯定是数组，让父亲和儿子拼在一起\r\n        if (p) {\r\n            return p.concat(c)\r\n        } else {\r\n            // 第一次，父亲没有，儿子有，将儿子包装成数组\r\n            return [c]\r\n        }\r\n    } else {\r\n        // 如果儿子没有，直接返回父亲\r\n        return p\r\n    }\r\n})\r\nstrats.components = function (parentVal, childVal) {\r\n    const res = Object.create(parentVal)\r\n    if (childVal) {\r\n        for (let key in childVal) {\r\n            res[key] = childVal[key] //返回的是构造的对象，可以拿到父亲原型上的属性，并且将儿子的都拷贝到自己身上\r\n        }\r\n    }\r\n    return res\r\n}\r\nexport function mergeOptions(parent, child) {\r\n    const options = {}\r\n    for (let key in parent) { // 循环老的\r\n        mergeField(key)\r\n    }\r\n    for (let key in child) { // 循环新的\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n    function mergeField(key) {\r\n        // 策略模式，用策略模式减少if，else\r\n        if (strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key])\r\n        } else {\r\n            // 如果不在策略中则以儿子为主\r\n            options[key] = child[key] || parent[key] //优先采用儿子，再采用父亲\r\n        }\r\n    }\r\n    return options\r\n}","import { mergeOptions } from \"./utils\"\r\nexport function initGlobalAPI(Vue) {\r\n    // 静态方法\r\n    Vue.options = {\r\n        _base:Vue\r\n    }\r\n    Vue.mixin = function (mixin) {\r\n        // 我们期望将用户的选项和全局的options进行合并\r\n        this.options = mergeOptions(this.options, mixin)\r\n        return this\r\n    }\r\n    Vue.extend = function (options) {\r\n        // 就是实现根据用户的参数 返回一个构造函数\r\n        function Sub(options = {}) { // 最终使用一个组件，就是new一个实例\r\n            this._init(options) // 默认对子类进行初始化\r\n        }\r\n        Sub.prototype = Object.create(Vue.prototype) // Sub.prototype._proto_ =  Vue.prototype\r\n        Sub.prototype.constructor = Sub\r\n        // 希望将用户传递的参数和全局的Vue.options合并\r\n        Sub.options = mergeOptions(Vue.options,options); // 保存用户传递的选项\r\n        return Sub\r\n    }\r\n    Vue.options.components = {}\r\n    Vue.component = function (id, definition) {\r\n        // 如果definition已经是个函数了，说明用户自己调用了Vue.extend\r\n        definition = typeof definition =='function' ? definition : Vue.extend(definition)\r\n        Vue.options.components[id] = definition\r\n    }\r\n}","// 标签名 a-aaa\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 命名空间标签 aa:aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 开始标签-捕获标签名\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 结束标签-匹配标签结尾的 </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 匹配标签结束的 >\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配 {{ }} 表达式\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\nfunction parseHTML(html) {\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    let root // 树的操作，需要根据开始标签和结束标签产生一个树\r\n    // 如何构建树的父子关系\r\n    let stack = []\r\n    function creatASTElement(tagName, attrs) {\r\n        return {\r\n            tag: tagName,\r\n            attrs,\r\n            children: [],\r\n            parent: null,\r\n            type: 1\r\n        }\r\n    }\r\n    function start(tagName, attrs) {\r\n        let element = creatASTElement(tagName, attrs);\r\n        if (root == null) {\r\n            root = element\r\n        }\r\n        let parent = stack[stack.length - 1]\r\n        if (parent) {\r\n            element.parent = parent // 让这个元素记住自己的父亲\r\n            parent.children.push(element) // 让这个元素记住自己的儿子\r\n        }\r\n        stack.push(element)\r\n    }\r\n    function end(tagName) {\r\n        stack.pop()\r\n    }\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, '')\r\n        if (text) {\r\n            let parent = stack[stack.length - 1]\r\n            parent.children.push({\r\n                type: 3,\r\n                text\r\n            })\r\n        }\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], //标签名\r\n                attrs: [],\r\n            };\r\n            advance(start[0].length);\r\n            let end, attr;\r\n            // 如果不是开始标签的结束,那就一直匹配\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n                advance(attr[0].length);\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n                return match\r\n            }\r\n            return false; //不是开始标签\r\n        }\r\n    }\r\n    while (html) {\r\n        // 如果textEnd为0,说明是一个开始标签,或一个结束标签\r\n        let textEnd = html.indexOf(\"<\"); //如果indexOf中的索引是0，则说明是个标签\r\n        if (textEnd === 0) {\r\n            const startTagMatch = parseStartTag();\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue\r\n            }\r\n            let matches\r\n            if (matches = html.match(endTag)) {//不是开始就会走到结束\r\n                end(matches[1])\r\n                advance(matches[0].length)\r\n                continue\r\n            }\r\n        }\r\n        let text\r\n        if (textEnd >= 0) {\r\n            text = html.substring(0, textEnd)\r\n        }\r\n        if (text) {\r\n            advance(text.length)\r\n            chars(text)\r\n        }\r\n    }\r\n    return root\r\n}\r\nfunction getProps(attrs) {\r\n    let str = ''\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        // style = 'color:red;background:blue'\r\n        if (attr.name == 'style') { // style:'{color:red,background:blue}'\r\n            let obj = {}\r\n            attr.value.split(';').reduce((memo, current) => {\r\n                let [key, value] = current.split(':')\r\n                memo[key] = value\r\n                return obj\r\n            }, obj)\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nfunction gen(child) {\r\n    if (child.type === 1) {\r\n        return getCode(child)\r\n    } else {\r\n        let text = child.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})` //不带表达式的\r\n        } else {\r\n            let tokens = []\r\n            let match\r\n            //exec 遇到全局匹配有lastIndex问题，每次匹配前需要将lastIndex置为0\r\n            let startIndex = defaultTagRE.lastIndex = 0\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let endIndex = match.index;//匹配到索引\r\n                if (endIndex > startIndex) {\r\n                    tokens.push(JSON.stringify(text.substring(startIndex, endIndex)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                startIndex = endIndex + match[0].length\r\n            }\r\n            if (startIndex < text.length) { //将最后的尾巴也丢进去\r\n                tokens.push(JSON.stringify(text.slice(startIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction getChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\nfunction getCode(ast) {\r\n    // 字符串拼接，拼接成想要的就行\r\n    let code\r\n    code = `_c('${ast.tag}',${ast.attrs.length ? getProps(ast.attrs) : 'undefined'}${ast.children ? ',' + getChildren(ast.children) : ''})`\r\n    //  _c('div',{className:'xxx'},createTextVnode('hello world'))\r\n    return code\r\n}\r\n// 将模板变成render函数，通过with+new Function()的方式让\r\nexport function compileToFunction(template) {\r\n    // 将template转化成ast语法树\r\n    let ast = parseHTML(template);\r\n    // 通过ast语法树转成render函数\r\n    let code = getCode(ast)\r\n    // 生产render方法（render方法执行后的返回结果就是虚拟dom）\r\n    const render = new Function(`with(this){return ${code}}`)\r\n    return render\r\n}\r\n","// 获取数组的原型\r\nlet oldArrayProto = Array.prototype\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function (...args) {\r\n        const ob = this.__ob__\r\n        const result = oldArrayProto[method].call(this, ...args)\r\n        let inserted\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n            default:\r\n                break\r\n        }\r\n        if(inserted){\r\n            ob.observeArray(inserted)\r\n        }\r\n        // 走到这里\r\n        ob.dep.notify() //数组变化了，通知对应的watcher实现更新\r\n        return result\r\n    }\r\n}) \r\n","let id = 0\r\nexport default class Dep{\r\n    constructor(){\r\n        this.id = id++  //属性的dep要收集watcher\r\n        this.subs = []  //这里存放\r\n    }\r\n    depend(){\r\n        // 这里我们不希望放重复的wacher，而且刚才只是一个单向的关系\r\n        // watcher记录dep\r\n        // this.subs.push(Dep.target)\r\n        Dep.target.addDep(this)  // 让watcher记住dep\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n    notify(){\r\n        this.subs.forEach(watcher => watcher.update()) //告诉watcher要更新了\r\n    }\r\n}\r\nlet stack = []\r\nexport function pushTarget(watcher){\r\n    stack.push(watcher)\r\n    Dep.target = watcher\r\n}\r\nexport function popTarget(){\r\n    stack.pop()\r\n    Dep.target = stack[stack.length - 1]\r\n}\r\nDep.target = null","/*\r\n * @Author: 小唐 476072478@qq.com\r\n * @Date: 2023-03-03 10:51:27\r\n * @LastEditors: 小唐 476072478@qq.com\r\n * @LastEditTime: 2023-04-18 17:52:12\r\n * @FilePath: \\Vue2源码编写\\src\\observe\\index.js\r\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n */\r\nimport { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\nclass Observe {\r\n  constructor(data) {\r\n    this.dep = new Dep(); //所有对象都要增加dep\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false, // 不可枚举\r\n    });\r\n    if (Array.isArray(data)) {\r\n      // 数组不做劫持，太浪费性能，重写数组方法\r\n      // 需要保留数组原有的特性，并且能够重写部分方法\r\n      data.__proto__ = newArrayProto;\r\n      this.observeArray(data);\r\n    } else {\r\n      this.walk(data);\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 循环对象，对属性依次劫持\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  observeArray(data) {\r\n    // 数组里面的{}需要监测到\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\nfunction dependArray(value) {\r\n  for (let i = 0; i < value.length; i++) {\r\n    value[i].__ob__ && value[i].__ob__.dep.depend();\r\n    if (Array.isArray(value[i])) {\r\n      dependArray(value[i]);\r\n    }\r\n  }\r\n}\r\nexport function defineReactive(target, key, value) {\r\n  //闭包\r\n  let childob = observe(value); //对所有对象都进行属性劫持\r\n  let dep = new Dep(); //每一个属性都有一个dep\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      if (Dep.target) {\r\n        dep.depend(); //让这个属性的收集器记住当前过程\r\n        if (childob) {\r\n          childob.dep.depend();\r\n          if (Array.isArray(value)) {\r\n            dependArray(value);\r\n          }\r\n        }\r\n      }\r\n      return value;\r\n    },\r\n    set(newvalue) {\r\n      if (value === newvalue) return;\r\n      observe(newvalue);\r\n      value = newvalue;\r\n      dep.notify(); //通知更新\r\n    },\r\n  });\r\n}\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== \"object\" || data === null) {\r\n    return null;\r\n  }\r\n  if (data.__ob__ instanceof Observe) {\r\n    //说明这个数据已经被代理\r\n    return data.__ob__;\r\n  }\r\n  // 如果一个对象已经被劫持，那么就不用被劫持\r\n  return new Observe(data);\r\n}\r\n","import Dep, { popTarget, pushTarget } from './dep'\r\n\r\nlet queeu = []\r\nlet has = {}\r\nlet pending = false //防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queeu.slice(0)\r\n    queeu = []\r\n    has = {}\r\n    pending = false\r\n    flushQueue.forEach(q => q.run()) //在刷新的过程中可能还有新的watcher，重新放到queue中\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\nfunction flushCallbacks() {\r\n    waiting = false\r\n    let cbs = callbacks.slice(0)\r\n    callbacks = []\r\n    cbs.forEach(cb => cb())\r\n}\r\n// nextTick采用的是优雅降级的方式\r\nlet timeFunc\r\nif (Promise) {\r\n    timeFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if (MutationObserver) {\r\n    let observer = new MutationObserver(flushCallbacks)\r\n    let textNode = createTextNode(1)\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    })\r\n    timeFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if (setImmediate) {\r\n    timeFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else {\r\n    setTimeout(() => {\r\n        flushCallbacks()\r\n    }, 0);\r\n}\r\nexport function nextTick(cb) { //先内部的还是先用户的？\r\n    callbacks.push(cb)\r\n    if (!waiting) {\r\n        timeFunc() //最后一起刷新\r\n    }\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id\r\n    if (!has[id]) {\r\n        queeu.push(watcher)\r\n        has[id] = true\r\n        // 不管update执行多少次，但是最终只执行一次\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue);\r\n            pending = true\r\n        }\r\n    }\r\n}\r\n\r\nlet id = 0\r\nclass Watcher {\r\n    constructor(vm, exprOrFn, options, cb) { // 不同组件有不同watcher\r\n        this.id = id++\r\n        this.renderWatcher = options //是一个渲染过程\r\n        if (typeof exprOrFn === 'string') {\r\n            this.getter = function () {\r\n                return vm[exprOrFn]\r\n            }\r\n        } else {\r\n            this.getter = exprOrFn // getter意味着调用这个函数会发生取值操作\r\n        }\r\n        this.deps = [] //后续我们实现计算属性和清理工作会用到\r\n        this.depsId = new Set()\r\n        this.lazy = options.lazy\r\n        this.dirty = this.lazy //缓存\r\n        this.cb = cb\r\n        this.vm = vm\r\n        this.user = options.user // 标识是否是用户自己的watcher\r\n        this.value = this.lazy ? undefined : this.get()\r\n    }\r\n    evaluate() {\r\n        this.value = this.get()\r\n        this.dirty = false\r\n    }\r\n    get() {\r\n        pushTarget(this) //静态属性只有一份\r\n        let value = this.getter.call(this.vm) //会去vm上取值\r\n        popTarget()\r\n        return value\r\n    }\r\n    addDep(dep) { //一个组件对应多个属性，重复的属性也不用记录\r\n        let id = dep.id\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep)\r\n            this.depsId.add(id) //watcher已经记住dep，并且已经去重\r\n            dep.addSub(this)\r\n        }\r\n    }\r\n    depend() {\r\n        let i = this.deps.length\r\n        while (i--) {\r\n            this.deps[i].depend() //让计算属性watcher也收集渲染过程\r\n        }\r\n    }\r\n    update() {\r\n        if (this.lazy) {\r\n            //如果是计算属性,依赖的值变化了，就标值计算属性是脏值\r\n            this.dirty = true\r\n        } else {\r\n            queueWatcher(this) //把当前的watcher暂存起来\r\n        }\r\n    }\r\n    run() {\r\n        let oldValue = this.value\r\n        let newValue = this.get()\r\n        if (this.user) {\r\n            this.cb.call(this.vm,oldValue, newValue)\r\n        }\r\n    }\r\n}\r\n// 需要给每个属性增加一个dep，目的就是收集watcher\r\n// 一个组件中有多少属性（n个属性对应一个组件） n个dep对应一个watcher\r\n// 1个属性对应多个组件 1个dep对应多个watcher\r\n// 多对多的关系\r\nexport default Watcher","import { observe } from \"./observe/index\";\r\nimport Watcher, { nextTick } from \"./observe/watcher\";\r\nimport Dep from \"./observe/dep\";\r\nexport function initState(vm) {\r\n    // 对数据进行劫持\r\n    const opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm)\r\n    }\r\n}\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    for (let key in watch) {\r\n        let handler = watch[key]\r\n        if (Array.isArray(watch)) {\r\n            for (let i = 0; i < watch.length; i++) {\r\n                creatWatch(vm, key, handler[i])\r\n            }\r\n        } else {\r\n            creatWatch(vm, key, handler)\r\n        }\r\n    }\r\n}\r\nfunction creatWatch(vm, key, handler) {\r\n    // 字符串,函数\r\n    if (typeof handler === 'string') {\r\n        handler = vm[handler]\r\n    }\r\n    return vm.$watch(key, handler)\r\n}\r\nfunction Proxy(vm, target, key) {\r\n    // 使用时候的劫持\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newvalue) {\r\n            vm[target][key] = newvalue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    // 对data进行劫持\r\n    let data = vm.$options.data;\r\n    data = typeof data == \"function\" ? data.call(vm) : data;\r\n    vm._data = data;\r\n    // 将vm.data 用vm代理\r\n    for (let key in data) {\r\n        Proxy(vm, \"_data\", key);\r\n    }\r\n    observe(data);\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed\r\n    const watchers = vm.computedWatcher = {} //将计算属性watcher保存到vm上\r\n    for (let key in computed) {\r\n        let userDef = computed[key]\r\n        // 我们需要监控计算属性中get的变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true })\r\n        defineComputed(vm, key, userDef)\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    const setter = userDef.set || (() => { })\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGeeter(key),\r\n        set: setter\r\n    })\r\n}\r\nfunction createComputedGeeter(key) {\r\n    // 我们需要监测是否要执行这个getter\r\n    return function () {\r\n        const watcher = this.computedWatcher[key]\r\n        if (watcher.dirty) {\r\n            // 如果是脏的，则执行\r\n            watcher.evaluate()\r\n        }\r\n        if (Dep.target) { //计算属性出栈后还有渲染过程，我应该让计算属性watcher里面的属性也去收集上一层watcher\r\n            watcher.depend()\r\n        }\r\n        return watcher.value\r\n    }\r\n}\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick;\r\n    // watch最终调用的是这个方法\r\n    Vue.prototype.$watch = function (exprOrFn, cb) {\r\n        new Watcher(this, exprOrFn, { user: true }, cb)\r\n    }\r\n}","const isReservedTag = (tag) => {\r\n    return ['a', 'button', 'p', 'div', 'ul', 'li', 'span'].includes(tag)\r\n}\r\nexport function createElement(vm, tag, data = {}, ...children) {\r\n    if (data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    if (isReservedTag(tag)) {\r\n        return vnode(vm, tag, data, children, data.key, null)\r\n    } else {\r\n        // 创造一个组件的虚拟节点（包含组件的构造函数）\r\n        let Ctor = vm.$options.components[tag]  // 组件的构造函数\r\n        // // Ctor就是组件的定义，可能是一个Sub类，还有可能是组件的obj选项\r\n        return createComponentVnode(vm, tag, key, data, children, Ctor)\r\n    }\r\n}\r\nfunction createComponentVnode(vm, tag, key, data, children, Ctor) {\r\n    if (typeof Ctor === 'object') {\r\n        Ctor = vm.$options._base.extend(Ctor)\r\n    }\r\n    data.hook = {\r\n        init(vnode) {\r\n            // 稍后创造真实节点的时候，如果是组件则调用此init方法\r\n            // 保存组件的实例到虚拟节点上\r\n            let instance = vnode.componentInstance = new vnode.componentOptions.Ctor\r\n            instance.$mount() // instance.$el\r\n        }\r\n    }\r\n    return vnode(vm, tag, data, children, key, null, { Ctor })\r\n}\r\nexport function createTextNode(vm, text) {\r\n    return vnode(vm, null, null, null, null, text)\r\n}\r\nfunction vnode(vm, tag, data, children, key, text, componentOptions) {\r\n    return {\r\n        vm, tag, data, children, key, text, componentOptions //组件的构造函数\r\n    }\r\n}\r\nexport function isSameVnode(vnode1, vnode2) {\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key\r\n}","import { isSameVnode } from \"./index\";\r\n\r\nfunction createComponent(vnode) {\r\n    let i = vnode.data\r\n    if ((i = i.hook) && (i = i.init)) {\r\n        i(vnode) //初始化组件\r\n    }\r\n    if(vnode.componentInstance){\r\n        return true\r\n    }\r\n}\r\nexport function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if (typeof tag === \"string\") {\r\n        // 创建真实元素 也要区分是组件还是元素\r\n        if (createComponent(vnode)) { //组件\r\n            return vnode.componentInstance.$el\r\n        }\r\n        vnode.el = document.createElement(tag); //后续我们需要diff算法，拿虚拟节点比对后更新dom\r\n        patchProps(vnode.el, {}, data);\r\n        children.forEach((children) => {\r\n            // 递归渲染\r\n            vnode.el.appendChild(createElm(children));\r\n        });\r\n    } else {\r\n        // 文本\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el; //从根虚拟节点创建真实节点\r\n}\r\nfunction patchProps(el, oldprops = {}, props = {}) {\r\n    // 老的属性中有，新的没有，要删除老的\r\n    let oldStyles = oldprops.style || {}\r\n    let newStyles = props.style || {}\r\n    for (let key in oldStyles) { // 老的样式中有，新的样式中没有则删除\r\n        if (!newStyles[key]) {\r\n            el.style[key] = ''\r\n        }\r\n    }\r\n    for (let key in oldprops) { // 老的属性中有，新的没有删除属性\r\n        if (!props[key]) {\r\n            el.removeAttribute(key)\r\n        }\r\n    }\r\n    for (let key in props) { // 用新的覆盖老的\r\n        if (key === \"style\") {\r\n            for (let styleName in props[key]) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\nexport function patch(oldVnode, vnode) {\r\n    if(!oldVnode){ // 这就是组件的挂载\r\n        return createElm(vnode) // vm.$el 对应的就是组件渲染的结果\r\n    }\r\n    const isRealElement = oldVnode && oldVnode.nodeType; // 如果有说明他是一个元素\r\n    if (isRealElement) {\r\n        const oldElm = oldVnode;\r\n        // 需要获取父节点，将当前节点的下一个元素作为参照物将他插入，之后删除老节点\r\n        const parentNode = oldElm.parentNode;\r\n        let el = createElm(vnode);\r\n        parentNode.insertBefore(el, oldElm.nextSibling);\r\n        parentNode.removeChild(oldElm);\r\n        return el;\r\n    } else {\r\n        // diff算法\r\n        // 两个节点不是同一个节点，直接删除老的换上新的（没有比对了）\r\n        // 两个节点是同一个节点，（判断节点的tag和节点的key） 比较两个节点的属性是否有差异（复用老的节点，将差异的属性更新）\r\n        // 节点比较完毕后，需要比较两个节点的儿子\r\n        patchVonde(oldVnode, vnode)\r\n    }\r\n}\r\nfunction mountChildren(el, newChildren) {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n        let child = newChildren[i]\r\n        el.appendChild(createElm(child))\r\n    }\r\n}\r\nfunction patchVonde(oldVnode, vnode) {\r\n    if (!isSameVnode(oldVnode, vnode)) {\r\n        let el = createElm(vnode)\r\n        oldVnode.el.parentNode.replaceChild(el, oldVnode.el)\r\n        return el\r\n    }\r\n    // 文本的情况，文本我们期望比较一下文本的内容\r\n    let el = vnode.el = oldVnode.el // 复用老节点的元素\r\n    if (!oldVnode.tag) { // 是文本\r\n        if (oldVnode.text !== vnode.text) {\r\n            el.textContent = vnode.text\r\n        }\r\n        return\r\n    }\r\n    // console.log(oldVnode, vnode)\r\n    //是标签  标签我们需要比对标签的属性\r\n    patchProps(el, oldVnode.data, vnode.data)\r\n\r\n    // 比较儿子节点，一方有儿子，一方没儿子\r\n    // 两方都有儿子\r\n    let oldChildren = oldVnode.children || []\r\n    let newChildren = vnode.children || []\r\n    if (oldChildren.length > 0 && newChildren.length > 0) {\r\n        // 两方都有儿子\r\n        updateChildren(el, oldChildren, newChildren)\r\n    } else if (newChildren.length > 0) {\r\n        mountChildren(el, newChildren)\r\n    } else if (oldChildren.length > 0) {\r\n        el.innerHTML = ''\r\n    }\r\n    return el\r\n}\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n    // 双指针\r\n    let oldStartIndex = 0\r\n    let newStartIndex = 0\r\n    let oldEndIndex = oldChildren.length - 1\r\n    let newEndIndex = newChildren.length - 1\r\n    let oldStartVnode = oldChildren[0]\r\n    let newStartVnode = newChildren[0]\r\n    let oldEndVnode = oldChildren[oldEndIndex]\r\n    let newEndVnode = newChildren[newEndIndex]\r\n    function makeIndexByKey(children) {\r\n        let map = {}\r\n        children.forEach((child, index) => {\r\n            map[child.key] = index\r\n        })\r\n        return map\r\n    }\r\n    let map = makeIndexByKey(oldChildren)\r\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) { // 有任何一个不满足则停止\r\n        if (!oldStartVnode) {\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n        } else if (!oldEndVnode) {\r\n            oldEndVnode = oldChildren[--oldStartIndex]\r\n        }\r\n        // 双方有一方头指针，大于尾部指针则停止循环 \r\n        // 比较开头节点\r\n        if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n            patchVonde(oldStartVnode, newStartVnode) //如果是相同节点则递归比较子节点\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n            newStartVnode = newChildren[++newStartIndex]\r\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n            patchVonde(oldEndVnode, newEndVnode)\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n            newEndVnode = newChildren[--newEndIndex]\r\n            // 比较尾部节点\r\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n            patchVonde(oldEndVnode, newStartVnode)\r\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el)\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n            newStartVnode = newChildren[++newStartIndex]\r\n            // 交叉比对 abcd - > dabc\r\n        } else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n            patchVonde(oldStartVnode, newEndVnode)\r\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n            newEndVnode = newChildren[--newEndIndex]\r\n            // 交叉比对 dabc - > abcd\r\n        } else {\r\n            // 乱序比对，尽可能的复用原来的dom\r\n            // 根据老的列表做一个映射关系，用新的去找，找到则移动，找不到则添加，最后多余的就删除\r\n            let moveIndex = map[newStartVnode.key] //如果拿到则说明是我要移动的索引\r\n            if (moveIndex !== undefined) {\r\n                let moveVnode = oldChildren[moveIndex] // 找到对应的虚拟节点\r\n                el.insertBefore(moveVnode.el, oldStartVnode.el)\r\n                oldChildren[moveIndex] = undefined // 不能删，删则导致数组塌陷，表示这个节点已经移动走了\r\n                patchVonde(moveVnode, newStartVnode)\r\n            } else {\r\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el)\r\n            }\r\n            newStartVnode = newChildren[++newStartIndex]\r\n        }\r\n    }\r\n    if (newStartIndex <= newEndIndex) { // 新得多了，多余的就插入进去\r\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n            let childEL = createElm(newChildren[i])\r\n            // 这里可能是向后追加，还有可能向前追追加\r\n            let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null  // 获取下一个元素\r\n            el.insertBefore(childEL, anchor); // anchor为null的时候则会认为是appednChild\r\n        }\r\n    }\r\n    if (oldStartIndex <= oldEndIndex) { // 老的多了，多的就删除\r\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n            if (oldChildren[i]) {\r\n                let childEL = oldChildren[i].el\r\n                el.removeChild(childEL)\r\n            }\r\n        }\r\n    }\r\n}\r\n// 每次更新页面的话，dom结果是不会变的，我调用render方法时，数据变化了会根据数据渲染成新的虚拟节点，用新的虚拟节点渲染dom","import Watcher from \"./observe/watcher\"\r\nimport { createElement } from \"./vdom/index\"\r\nimport { createTextNode } from \"./vdom/index\"\r\nimport { patch } from \"./vdom/patch\"\r\n\r\nexport function lifeCycleMixin(Vue) {\r\n    Vue.prototype._c = function () {\r\n        // 创造对应的虚拟节点，进行渲染\r\n        return createElement(this, ...arguments)\r\n    }\r\n    Vue.prototype._v = function () {\r\n        return createTextNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function (value) { //将数据转化成字符串，因为使用变量对应的结果可能是一个对象\r\n        if (typeof value === 'object' && value !== null) {\r\n            return JSON.stringify(value)\r\n        }\r\n        return value\r\n    }\r\n    Vue.prototype._render = function () {\r\n        const vm = this\r\n        const render = vm.$options.render\r\n        let vnode = render.call(vm)\r\n        return vnode\r\n    }\r\n    Vue.prototype._update = function (vnode) { //将虚拟节点变成真实节点\r\n        // 将Vnode渲染到el元素中\r\n        const vm = this\r\n        const el = vm.$el\r\n        const prevVnode = vm._vnode\r\n        vm._vnode = vnode //把组件第一次产生的虚拟节点保存到_vnode上\r\n        if (prevVnode) {\r\n            // 之前渲染过了\r\n            vm.$el = patch(prevVnode, vnode)\r\n        } else {\r\n            vm.$el = patch(el, vnode)\r\n        }\r\n    }\r\n}\r\nexport function mountComponent(vm, el) {\r\n    debugger\r\n    //实现页面的挂载流程\r\n    // 先将el挂载到实例上\r\n    vm.$el = el\r\n    const updataComponent = () => {\r\n        // 需要调用生成的render函数获取到虚拟节点 -》 生成真实的dom\r\n        vm._update(vm._render())\r\n    }\r\n    new Watcher(vm, updataComponent, true)\r\n    //如果稍后数据变化，也调用这个函数重新执行\r\n    // 观察者模式\r\n}\r\nexport function callHook(vm, hook) {\r\n    // 调用钩子函数\r\n    const handlers = vm.$options[hook]\r\n    if (handlers) {\r\n        handlers.forEach(handler => {\r\n            handler.call(vm)\r\n        });\r\n    }\r\n}","/*\r\n * @Author: 小唐 476072478@qq.com\r\n * @Date: 2023-03-03 09:58:34\r\n * @LastEditors: 小唐 476072478@qq.com\r\n * @LastEditTime: 2023-04-18 16:10:58\r\n * @FilePath: \\Vue2源码编写\\src\\init.js\r\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n */\r\n\r\nimport { compileToFunction } from \"./compiler/index\";\r\nimport { initState } from \"./state\";\r\nimport { callHook, mountComponent } from './lifecycle'\r\nimport { mergeOptions } from \"./utils\";\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        // 用于初始化操作\r\n        const vm = this;\r\n\r\n        vm.$options = mergeOptions(this.constructor.options, options); // 将用户的选项挂载到实例上\r\n\r\n        callHook(vm, 'beforeCreate')\r\n        // 初始化状态，初始化计算属性，watcher\r\n        initState(vm);\r\n        callHook(vm, 'created')\r\n        // todo...\r\n        if (options.el) {\r\n            vm.$mount(options.el);\r\n        }\r\n    };\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        if (!ops.render) {\r\n            // 先查找有没有render函数\r\n            let template;\r\n            if (!ops.template && el) {\r\n                // 如果没有render函数有el\r\n                template = el.outerHTML;\r\n            } else {\r\n                // 写了templat，就用写了的template\r\n                template = ops.template;\r\n            }\r\n            if (template) {\r\n                // 这里需要对模板进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n            }\r\n        }\r\n        // 将实例挂载到el上\r\n        mountComponent(vm, el)\r\n    };\r\n}\r\n","import { initGlobalAPI } from \"./globalApi\";\r\nimport { initMixin } from \"./init\";\r\nimport { lifeCycleMixin } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\nfunction Vue(options) {\r\n    this._init(options);\r\n}\r\ninitStateMixin(Vue)\r\ninitMixin(Vue); // 扩展了init方法\r\nlifeCycleMixin(Vue);\r\ninitGlobalAPI(Vue)\r\nexport default Vue;"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","components","parentVal","childVal","res","Object","create","key","mergeOptions","parent","child","options","mergeField","hasOwnProperty","initGlobalAPI","Vue","_base","mixin","extend","Sub","arguments","length","undefined","_init","prototype","constructor","component","id","definition","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","parseHTML","html","advance","n","substring","root","stack","creatASTElement","tagName","attrs","tag","children","type","start","element","push","end","pop","chars","text","replace","parseStartTag","match","attr","name","value","textEnd","indexOf","startTagMatch","matches","getProps","str","_loop","i","obj","split","reduce","memo","current","_current$split","_current$split2","_slicedToArray","JSON","stringify","slice","gen","getCode","test","tokens","startIndex","lastIndex","exec","endIndex","index","trim","join","getChildren","map","ast","code","compileToFunction","template","render","Function","oldArrayProto","Array","newArrayProto","methods","method","_oldArrayProto$method","ob","__ob__","_len","args","_key","result","call","apply","inserted","observeArray","dep","notify","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","update","pushTarget","popTarget","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","childob","get","set","newvalue","_typeof","queeu","has","pending","flushSchedulerQueue","flushQueue","q","run","callbacks","waiting","flushCallbacks","cbs","cb","timeFunc","Promise","resolve","then","MutationObserver","observer","textNode","createTextNode","characterData","textContent","setImmediate","setTimeout","nextTick","queueWatcher","Watcher","vm","exprOrFn","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","evaluate","add","oldValue","newValue","initState","opts","$options","initData","computed","initComputed","watch","initWatch","handler","creatWatch","$watch","Proxy","_data","watchers","computedWatcher","userDef","fn","defineComputed","setter","createComputedGeeter","initStateMixin","$nextTick","isReservedTag","includes","createElement","vnode","Ctor","createComponentVnode","init","instance","componentInstance","componentOptions","$mount","isSameVnode","vnode1","vnode2","createComponent","createElm","$el","el","document","patchProps","appendChild","oldprops","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVnode","isRealElement","nodeType","oldElm","parentNode","insertBefore","nextSibling","removeChild","patchVonde","mountChildren","newChildren","replaceChild","oldChildren","updateChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEL","anchor","lifeCycleMixin","_c","_v","_s","_render","_update","prevVnode","_vnode","mountComponent","updataComponent","callHook","handlers","initMixin","querySelector","ops","outerHTML"],"mappings":";;;;;;IAAA;IACA,IAAMA,MAAM,GAAG,EAAE,CAAA;IACjB,IAAMC,SAAS,GAAG,CACd,cAAc,EACd,SAAS,CACZ,CAAA;IACDA,SAAS,CAACC,OAAO,CAAC,UAAAC,IAAI,EAAA;MAAA,OAAIH,MAAM,CAACG,IAAI,CAAC,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IACrD;IACA;IACA,IAAA,IAAIA,CAAC,EAAE;IACH;IACA,MAAA,IAAID,CAAC,EAAE;IACH,QAAA,OAAOA,CAAC,CAACE,MAAM,CAACD,CAAC,CAAC,CAAA;IACtB,OAAC,MAAM;IACH;YACA,OAAO,CAACA,CAAC,CAAC,CAAA;IACd,OAAA;IACJ,KAAC,MAAM;IACH;IACA,MAAA,OAAOD,CAAC,CAAA;IACZ,KAAA;OACH,CAAA;IAAA,CAAC,CAAA,CAAA;IACFJ,MAAM,CAACO,UAAU,GAAG,UAAUC,SAAS,EAAEC,QAAQ,EAAE;IAC/C,EAAA,IAAMC,GAAG,GAAGC,MAAM,CAACC,MAAM,CAACJ,SAAS,CAAC,CAAA;IACpC,EAAA,IAAIC,QAAQ,EAAE;IACV,IAAA,KAAK,IAAII,GAAG,IAAIJ,QAAQ,EAAE;UACtBC,GAAG,CAACG,GAAG,CAAC,GAAGJ,QAAQ,CAACI,GAAG,CAAC,CAAC;IAC7B,KAAA;IACJ,GAAA;;IACA,EAAA,OAAOH,GAAG,CAAA;IACd,CAAC,CAAA;IACM,SAASI,YAAYA,CAACC,MAAM,EAAEC,KAAK,EAAE;MACxC,IAAMC,OAAO,GAAG,EAAE,CAAA;IAClB,EAAA,KAAK,IAAIJ,GAAG,IAAIE,MAAM,EAAE;IAAE;QACtBG,UAAU,CAACL,GAAG,CAAC,CAAA;IACnB,GAAA;IACA,EAAA,KAAK,IAAIA,IAAG,IAAIG,KAAK,EAAE;IAAE;IACrB,IAAA,IAAI,CAACD,MAAM,CAACI,cAAc,CAACN,IAAG,CAAC,EAAE;UAC7BK,UAAU,CAACL,IAAG,CAAC,CAAA;IACnB,KAAA;IACJ,GAAA;MACA,SAASK,UAAUA,CAACL,GAAG,EAAE;IACrB;IACA,IAAA,IAAIb,MAAM,CAACa,GAAG,CAAC,EAAE;IACbI,MAAAA,OAAO,CAACJ,GAAG,CAAC,GAAGb,MAAM,CAACa,GAAG,CAAC,CAACE,MAAM,CAACF,GAAG,CAAC,EAAEG,KAAK,CAACH,GAAG,CAAC,CAAC,CAAA;IACvD,KAAC,MAAM;IACH;IACAI,MAAAA,OAAO,CAACJ,GAAG,CAAC,GAAGG,KAAK,CAACH,GAAG,CAAC,IAAIE,MAAM,CAACF,GAAG,CAAC,CAAC;IAC7C,KAAA;IACJ,GAAA;;IACA,EAAA,OAAOI,OAAO,CAAA;IAClB;;IClDO,SAASG,aAAaA,CAACC,GAAG,EAAE;IAC/B;MACAA,GAAG,CAACJ,OAAO,GAAG;IACVK,IAAAA,KAAK,EAACD,GAAAA;OACT,CAAA;IACDA,EAAAA,GAAG,CAACE,KAAK,GAAG,UAAUA,KAAK,EAAE;IACzB;QACA,IAAI,CAACN,OAAO,GAAGH,YAAY,CAAC,IAAI,CAACG,OAAO,EAAEM,KAAK,CAAC,CAAA;IAChD,IAAA,OAAO,IAAI,CAAA;OACd,CAAA;IACDF,EAAAA,GAAG,CAACG,MAAM,GAAG,UAAUP,OAAO,EAAE;IAC5B;QACA,SAASQ,GAAGA,GAAe;IAAA,MAAA,IAAdR,OAAO,GAAAS,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAAI;IACzB,MAAA,IAAI,CAACG,KAAK,CAACZ,OAAO,CAAC,CAAC;IACxB,KAAA;;QACAQ,GAAG,CAACK,SAAS,GAAGnB,MAAM,CAACC,MAAM,CAACS,GAAG,CAACS,SAAS,CAAC,CAAC;IAC7CL,IAAAA,GAAG,CAACK,SAAS,CAACC,WAAW,GAAGN,GAAG,CAAA;IAC/B;IACAA,IAAAA,GAAG,CAACR,OAAO,GAAGH,YAAY,CAACO,GAAG,CAACJ,OAAO,EAACA,OAAO,CAAC,CAAC;IAChD,IAAA,OAAOQ,GAAG,CAAA;OACb,CAAA;IACDJ,EAAAA,GAAG,CAACJ,OAAO,CAACV,UAAU,GAAG,EAAE,CAAA;IAC3Bc,EAAAA,GAAG,CAACW,SAAS,GAAG,UAAUC,EAAE,EAAEC,UAAU,EAAE;IACtC;IACAA,IAAAA,UAAU,GAAG,OAAOA,UAAU,IAAG,UAAU,GAAGA,UAAU,GAAGb,GAAG,CAACG,MAAM,CAACU,UAAU,CAAC,CAAA;QACjFb,GAAG,CAACJ,OAAO,CAACV,UAAU,CAAC0B,EAAE,CAAC,GAAGC,UAAU,CAAA;OAC1C,CAAA;IACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC5BA;IACA,IAAMC,MAAM,GAAiC,8BAAA,CAAA;IAC7C;IACA,IAAMC,YAAY,UAAA9B,MAAA,CAAU6B,MAAM,EAAA7B,OAAAA,CAAAA,CAAAA,MAAA,CAAQ6B,MAAM,EAAG,GAAA,CAAA,CAAA;IACnD;IACA,IAAME,YAAY,GAAG,IAAIC,MAAM,MAAAhC,MAAA,CAAM8B,YAAY,CAAG,CAAA,CAAA;IACpD;IACA,IAAMG,MAAM,GAAG,IAAID,MAAM,SAAAhC,MAAA,CAAS8B,YAAY,EAAS,QAAA,CAAA,CAAA,CAAA;IACvD;IACA,IAAMI,SAAS,GACX,2EAA2E,CAAA;IAC/E;IACA,IAAMC,aAAa,GAAG,YAAY,CAAA;IAClC;IACA,IAAMC,YAAY,GAAG,0BAA0B,CAAA;IAC/C,SAASC,SAASA,CAACC,IAAI,EAAE;MACrB,SAASC,OAAOA,CAACC,CAAC,EAAE;IAChBF,IAAAA,IAAI,GAAGA,IAAI,CAACG,SAAS,CAACD,CAAC,CAAC,CAAA;IAC5B,GAAA;IACA,EAAA,IAAIE,IAAI,CAAC;IACT;MACA,IAAIC,KAAK,GAAG,EAAE,CAAA;IACd,EAAA,SAASC,eAAeA,CAACC,OAAO,EAAEC,KAAK,EAAE;QACrC,OAAO;IACHC,MAAAA,GAAG,EAAEF,OAAO;IACZC,MAAAA,KAAK,EAALA,KAAK;IACLE,MAAAA,QAAQ,EAAE,EAAE;IACZvC,MAAAA,MAAM,EAAE,IAAI;IACZwC,MAAAA,IAAI,EAAE,CAAA;SACT,CAAA;IACL,GAAA;IACA,EAAA,SAASC,KAAKA,CAACL,OAAO,EAAEC,KAAK,EAAE;IAC3B,IAAA,IAAIK,OAAO,GAAGP,eAAe,CAACC,OAAO,EAAEC,KAAK,CAAC,CAAA;QAC7C,IAAIJ,IAAI,IAAI,IAAI,EAAE;IACdA,MAAAA,IAAI,GAAGS,OAAO,CAAA;IAClB,KAAA;QACA,IAAI1C,MAAM,GAAGkC,KAAK,CAACA,KAAK,CAACtB,MAAM,GAAG,CAAC,CAAC,CAAA;IACpC,IAAA,IAAIZ,MAAM,EAAE;IACR0C,MAAAA,OAAO,CAAC1C,MAAM,GAAGA,MAAM,CAAC;IACxBA,MAAAA,MAAM,CAACuC,QAAQ,CAACI,IAAI,CAACD,OAAO,CAAC,CAAC;IAClC,KAAA;;IACAR,IAAAA,KAAK,CAACS,IAAI,CAACD,OAAO,CAAC,CAAA;IACvB,GAAA;MACA,SAASE,GAAGA,CAACR,OAAO,EAAE;QAClBF,KAAK,CAACW,GAAG,EAAE,CAAA;IACf,GAAA;MACA,SAASC,KAAKA,CAACC,IAAI,EAAE;QACjBA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;IAC9B,IAAA,IAAID,IAAI,EAAE;UACN,IAAI/C,MAAM,GAAGkC,KAAK,CAACA,KAAK,CAACtB,MAAM,GAAG,CAAC,CAAC,CAAA;IACpCZ,MAAAA,MAAM,CAACuC,QAAQ,CAACI,IAAI,CAAC;IACjBH,QAAAA,IAAI,EAAE,CAAC;IACPO,QAAAA,IAAI,EAAJA,IAAAA;IACJ,OAAC,CAAC,CAAA;IACN,KAAA;IACJ,GAAA;MACA,SAASE,aAAaA,GAAG;IACrB,IAAA,IAAMR,KAAK,GAAGZ,IAAI,CAACqB,KAAK,CAAC5B,YAAY,CAAC,CAAA;IACtC,IAAA,IAAImB,KAAK,EAAE;IACP,MAAA,IAAMS,KAAK,GAAG;IACVd,QAAAA,OAAO,EAAEK,KAAK,CAAC,CAAC,CAAC;IAAE;IACnBJ,QAAAA,KAAK,EAAE,EAAA;WACV,CAAA;IACDP,MAAAA,OAAO,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC7B,MAAM,CAAC,CAAA;UACxB,IAAIgC,IAAG,EAAEO,IAAI,CAAA;IACb;UACA,OAAO,EAAEP,IAAG,GAAGf,IAAI,CAACqB,KAAK,CAACxB,aAAa,CAAC,CAAC,KAAKyB,IAAI,GAAGtB,IAAI,CAACqB,KAAK,CAACzB,SAAS,CAAC,CAAC,EAAE;IACzEyB,QAAAA,KAAK,CAACb,KAAK,CAACM,IAAI,CAAC;IAAES,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;IAAEE,UAAAA,KAAK,EAAEF,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,IAAA;IAAK,SAAC,CAAC,CAAA;IACjFrB,QAAAA,OAAO,CAACqB,IAAI,CAAC,CAAC,CAAC,CAACvC,MAAM,CAAC,CAAA;IAC3B,OAAA;IACA,MAAA,IAAIgC,IAAG,EAAE;IACLd,QAAAA,OAAO,CAACc,IAAG,CAAC,CAAC,CAAC,CAAChC,MAAM,CAAC,CAAA;IACtB,QAAA,OAAOsC,KAAK,CAAA;IAChB,OAAA;UACA,OAAO,KAAK,CAAC;IACjB,KAAA;IACJ,GAAA;;IACA,EAAA,OAAOrB,IAAI,EAAE;IACT;QACA,IAAIyB,OAAO,GAAGzB,IAAI,CAAC0B,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,IAAID,OAAO,KAAK,CAAC,EAAE;UACf,IAAME,aAAa,GAAGP,aAAa,EAAE,CAAA;IACrC,MAAA,IAAIO,aAAa,EAAE;YACff,KAAK,CAACe,aAAa,CAACpB,OAAO,EAAEoB,aAAa,CAACnB,KAAK,CAAC,CAAA;IACjD,QAAA,SAAA;IACJ,OAAA;IACA,MAAA,IAAIoB,OAAO,GAAA,KAAA,CAAA,CAAA;UACX,IAAIA,OAAO,GAAG5B,IAAI,CAACqB,KAAK,CAAC1B,MAAM,CAAC,EAAE;IAAC;IAC/BoB,QAAAA,GAAG,CAACa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;IACf3B,QAAAA,OAAO,CAAC2B,OAAO,CAAC,CAAC,CAAC,CAAC7C,MAAM,CAAC,CAAA;IAC1B,QAAA,SAAA;IACJ,OAAA;IACJ,KAAA;IACA,IAAA,IAAImC,IAAI,GAAA,KAAA,CAAA,CAAA;QACR,IAAIO,OAAO,IAAI,CAAC,EAAE;UACdP,IAAI,GAAGlB,IAAI,CAACG,SAAS,CAAC,CAAC,EAAEsB,OAAO,CAAC,CAAA;IACrC,KAAA;IACA,IAAA,IAAIP,IAAI,EAAE;IACNjB,MAAAA,OAAO,CAACiB,IAAI,CAACnC,MAAM,CAAC,CAAA;UACpBkC,KAAK,CAACC,IAAI,CAAC,CAAA;IACf,KAAA;IACJ,GAAA;IACA,EAAA,OAAOd,IAAI,CAAA;IACf,CAAA;IACA,SAASyB,QAAQA,CAACrB,KAAK,EAAE;MACrB,IAAIsB,GAAG,GAAG,EAAE,CAAA;MAAA,IAAAC,KAAA,GAAAA,SAAAA,KAAAA,GAC2B;IACnC,IAAA,IAAIT,IAAI,GAAGd,KAAK,CAACwB,CAAC,CAAC,CAAA;IACnB;IACA,IAAA,IAAIV,IAAI,CAACC,IAAI,IAAI,OAAO,EAAE;IAAE;UACxB,IAAIU,GAAG,GAAG,EAAE,CAAA;IACZX,MAAAA,IAAI,CAACE,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,UAACC,IAAI,EAAEC,OAAO,EAAK;IAC5C,QAAA,IAAAC,cAAA,GAAmBD,OAAO,CAACH,KAAK,CAAC,GAAG,CAAC;cAAAK,eAAA,GAAAC,cAAA,CAAAF,cAAA,EAAA,CAAA,CAAA;IAAhCrE,UAAAA,GAAG,GAAAsE,eAAA,CAAA,CAAA,CAAA;IAAEf,UAAAA,KAAK,GAAAe,eAAA,CAAA,CAAA,CAAA,CAAA;IACfH,QAAAA,IAAI,CAACnE,GAAG,CAAC,GAAGuD,KAAK,CAAA;IACjB,QAAA,OAAOS,GAAG,CAAA;WACb,EAAEA,GAAG,CAAC,CAAA;UACPX,IAAI,CAACE,KAAK,GAAGS,GAAG,CAAA;IACpB,KAAA;IACAH,IAAAA,GAAG,OAAApE,MAAA,CAAO4D,IAAI,CAACC,IAAI,EAAA7D,GAAAA,CAAAA,CAAAA,MAAA,CAAI+E,IAAI,CAACC,SAAS,CAACpB,IAAI,CAACE,KAAK,CAAC,EAAG,GAAA,CAAA,CAAA;OACvD,CAAA;IAbD,EAAA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,KAAK,CAACzB,MAAM,EAAEiD,CAAC,EAAE,EAAA;QAAAD,KAAA,EAAA,CAAA;IAAA,GAAA;MAcrC,OAAArE,GAAAA,CAAAA,MAAA,CAAWoE,GAAG,CAACa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;IAC/B,CAAA;IACA,SAASC,GAAGA,CAACxE,KAAK,EAAE;IAChB,EAAA,IAAIA,KAAK,CAACuC,IAAI,KAAK,CAAC,EAAE;QAClB,OAAOkC,OAAO,CAACzE,KAAK,CAAC,CAAA;IACzB,GAAC,MAAM;IACH,IAAA,IAAI8C,IAAI,GAAG9C,KAAK,CAAC8C,IAAI,CAAA;IACrB,IAAA,IAAI,CAACpB,YAAY,CAACgD,IAAI,CAAC5B,IAAI,CAAC,EAAE;UAC1B,OAAAxD,KAAAA,CAAAA,MAAA,CAAa+E,IAAI,CAACC,SAAS,CAACxB,IAAI,CAAC,EAAA,GAAA,CAAA,CAAG;IACxC,KAAC,MAAM;UACH,IAAI6B,MAAM,GAAG,EAAE,CAAA;IACf,MAAA,IAAI1B,KAAK,CAAA;IACT;IACA,MAAA,IAAI2B,UAAU,GAAGlD,YAAY,CAACmD,SAAS,GAAG,CAAC,CAAA;UAC3C,OAAO5B,KAAK,GAAGvB,YAAY,CAACoD,IAAI,CAAChC,IAAI,CAAC,EAAE;IACpC,QAAA,IAAIiC,QAAQ,GAAG9B,KAAK,CAAC+B,KAAK,CAAC;YAC3B,IAAID,QAAQ,GAAGH,UAAU,EAAE;IACvBD,UAAAA,MAAM,CAACjC,IAAI,CAAC2B,IAAI,CAACC,SAAS,CAACxB,IAAI,CAACf,SAAS,CAAC6C,UAAU,EAAEG,QAAQ,CAAC,CAAC,CAAC,CAAA;IACrE,SAAA;IACAJ,QAAAA,MAAM,CAACjC,IAAI,CAAApD,KAAAA,CAAAA,MAAA,CAAO2D,KAAK,CAAC,CAAC,CAAC,CAACgC,IAAI,EAAE,EAAI,GAAA,CAAA,CAAA,CAAA;YACrCL,UAAU,GAAGG,QAAQ,GAAG9B,KAAK,CAAC,CAAC,CAAC,CAACtC,MAAM,CAAA;IAC3C,OAAA;IACA,MAAA,IAAIiE,UAAU,GAAG9B,IAAI,CAACnC,MAAM,EAAE;IAAE;IAC5BgE,QAAAA,MAAM,CAACjC,IAAI,CAAC2B,IAAI,CAACC,SAAS,CAACxB,IAAI,CAACyB,KAAK,CAACK,UAAU,CAAC,CAAC,CAAC,CAAA;IACvD,OAAA;IACA,MAAA,OAAA,KAAA,CAAAtF,MAAA,CAAaqF,MAAM,CAACO,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;IACjC,KAAA;IACJ,GAAA;IACJ,CAAA;IACA,SAASC,WAAWA,CAAC7C,QAAQ,EAAE;IAC3B,EAAA,OAAOA,QAAQ,CAAC8C,GAAG,CAAC,UAAApF,KAAK,EAAA;QAAA,OAAIwE,GAAG,CAACxE,KAAK,CAAC,CAAA;IAAA,GAAA,CAAC,CAACkF,IAAI,CAAC,GAAG,CAAC,CAAA;IACtD,CAAA;IACA,SAAST,OAAOA,CAACY,GAAG,EAAE;IAClB;IACA,EAAA,IAAIC,IAAI,CAAA;IACRA,EAAAA,IAAI,UAAAhG,MAAA,CAAU+F,GAAG,CAAChD,GAAG,QAAA/C,MAAA,CAAK+F,GAAG,CAACjD,KAAK,CAACzB,MAAM,GAAG8C,QAAQ,CAAC4B,GAAG,CAACjD,KAAK,CAAC,GAAG,WAAW,CAAA9C,CAAAA,MAAA,CAAG+F,GAAG,CAAC/C,QAAQ,GAAG,GAAG,GAAG6C,WAAW,CAACE,GAAG,CAAC/C,QAAQ,CAAC,GAAG,EAAE,EAAG,GAAA,CAAA,CAAA;IACvI;IACA,EAAA,OAAOgD,IAAI,CAAA;IACf,CAAA;IACA;IACO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;IACxC;IACA,EAAA,IAAIH,GAAG,GAAG1D,SAAS,CAAC6D,QAAQ,CAAC,CAAA;IAC7B;IACA,EAAA,IAAIF,IAAI,GAAGb,OAAO,CAACY,GAAG,CAAC,CAAA;IACvB;MACA,IAAMI,MAAM,GAAG,IAAIC,QAAQ,sBAAApG,MAAA,CAAsBgG,IAAI,EAAI,GAAA,CAAA,CAAA,CAAA;IACzD,EAAA,OAAOG,MAAM,CAAA;IACjB;;ICxKA;IACA,IAAIE,aAAa,GAAGC,KAAK,CAAC9E,SAAS,CAAA;IAC5B,IAAI+E,aAAa,GAAGlG,MAAM,CAACC,MAAM,CAAC+F,aAAa,CAAC,CAAA;IAEvD,IAAIG,OAAO,GAAG,CACV,MAAM,EACN,KAAK,EACL,OAAO,EACP,SAAS,EACT,SAAS,EACT,MAAM,EACN,QAAQ,CACX,CAAA;IACDA,OAAO,CAAC5G,OAAO,CAAC,UAAA6G,MAAM,EAAI;IACtBF,EAAAA,aAAa,CAACE,MAAM,CAAC,GAAG,YAAmB;IAAA,IAAA,IAAAC,qBAAA,CAAA;IACvC,IAAA,IAAMC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;IAAA,IAAA,KAAA,IAAAC,IAAA,GAAAzF,SAAA,CAAAC,MAAA,EADWyF,IAAI,GAAAR,IAAAA,KAAA,CAAAO,IAAA,GAAAE,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA,EAAA,EAAA;IAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAA3F,GAAAA,SAAA,CAAA2F,IAAA,CAAA,CAAA;IAAA,KAAA;QAErC,IAAMC,MAAM,GAAG,CAAAN,qBAAA,GAAAL,aAAa,CAACI,MAAM,CAAC,EAACQ,IAAI,CAAAC,KAAA,CAAAR,qBAAA,EAAA,CAAC,IAAI,CAAA1G,CAAAA,MAAA,CAAK8G,IAAI,CAAC,CAAA,CAAA;IACxD,IAAA,IAAIK,QAAQ,CAAA;IACZ,IAAA,QAAQV,MAAM;IACV,MAAA,KAAK,MAAM,CAAA;IACX,MAAA,KAAK,SAAS;IACVU,QAAAA,QAAQ,GAAGL,IAAI,CAAA;IACf,QAAA,MAAA;IACJ,MAAA,KAAK,QAAQ;IACTK,QAAAA,QAAQ,GAAGL,IAAI,CAAC7B,KAAK,CAAC,CAAC,CAAC,CAAA;IAEnB,KAAA;IAEb,IAAA,IAAGkC,QAAQ,EAAC;IACRR,MAAAA,EAAE,CAACS,YAAY,CAACD,QAAQ,CAAC,CAAA;IAC7B,KAAA;IACA;IACAR,IAAAA,EAAE,CAACU,GAAG,CAACC,MAAM,EAAE,CAAC;IAChB,IAAA,OAAON,MAAM,CAAA;OAChB,CAAA;IACL,CAAC,CAAC;;ICnCF,IAAIrF,IAAE,GAAG,CAAC,CAAA;IAAA,IACW4F,GAAG,gBAAA,YAAA;IACpB,EAAA,SAAAA,MAAa;IAAAC,IAAAA,eAAA,OAAAD,GAAA,CAAA,CAAA;IACT,IAAA,IAAI,CAAC5F,EAAE,GAAGA,IAAE,EAAE,CAAE;IAChB,IAAA,IAAI,CAAC8F,IAAI,GAAG,EAAE,CAAE;IACpB,GAAA;IAACC,EAAAA,YAAA,CAAAH,GAAA,EAAA,CAAA;QAAAhH,GAAA,EAAA,QAAA;QAAAuD,KAAA,EACD,SAAA6D,MAAAA,GAAQ;IACJ;IACA;IACA;IACAJ,MAAAA,GAAG,CAACK,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAE;IAC7B,KAAA;IAAC,GAAA,EAAA;QAAAtH,GAAA,EAAA,QAAA;IAAAuD,IAAAA,KAAA,EACD,SAAAgE,MAAOC,CAAAA,OAAO,EAAC;IACX,MAAA,IAAI,CAACN,IAAI,CAACrE,IAAI,CAAC2E,OAAO,CAAC,CAAA;IAC3B,KAAA;IAAC,GAAA,EAAA;QAAAxH,GAAA,EAAA,QAAA;QAAAuD,KAAA,EACD,SAAAwD,MAAAA,GAAQ;IACJ,MAAA,IAAI,CAACG,IAAI,CAAC7H,OAAO,CAAC,UAAAmI,OAAO,EAAA;YAAA,OAAIA,OAAO,CAACC,MAAM,EAAE,CAAA;IAAA,OAAA,CAAC,CAAC;IACnD,KAAA;IAAC,GAAA,CAAA,CAAA,CAAA;IAAA,EAAA,OAAAT,GAAA,CAAA;IAAA,CAAA,EAAA,CAAA;IAEL,IAAI5E,KAAK,GAAG,EAAE,CAAA;IACP,SAASsF,UAAUA,CAACF,OAAO,EAAC;IAC/BpF,EAAAA,KAAK,CAACS,IAAI,CAAC2E,OAAO,CAAC,CAAA;MACnBR,GAAG,CAACK,MAAM,GAAGG,OAAO,CAAA;IACxB,CAAA;IACO,SAASG,SAASA,GAAE;MACvBvF,KAAK,CAACW,GAAG,EAAE,CAAA;MACXiE,GAAG,CAACK,MAAM,GAAGjF,KAAK,CAACA,KAAK,CAACtB,MAAM,GAAG,CAAC,CAAC,CAAA;IACxC,CAAA;IACAkG,GAAG,CAACK,MAAM,GAAG,IAAI;;ICnBO,IAClBO,OAAO,gBAAA,YAAA;MACX,SAAAA,OAAAA,CAAYC,IAAI,EAAE;IAAAZ,IAAAA,eAAA,OAAAW,OAAA,CAAA,CAAA;IAChB,IAAA,IAAI,CAACd,GAAG,GAAG,IAAIE,GAAG,EAAE,CAAC;IACrBlH,IAAAA,MAAM,CAACgI,cAAc,CAACD,IAAI,EAAE,QAAQ,EAAE;IACpCtE,MAAAA,KAAK,EAAE,IAAI;UACXwE,UAAU,EAAE,KAAK;IACnB,KAAC,CAAC,CAAA;;IACF,IAAA,IAAIhC,KAAK,CAACiC,OAAO,CAACH,IAAI,CAAC,EAAE;IACvB;IACA;UACAA,IAAI,CAACI,SAAS,GAAGjC,aAAa,CAAA;IAC9B,MAAA,IAAI,CAACa,YAAY,CAACgB,IAAI,CAAC,CAAA;IACzB,KAAC,MAAM;IACL,MAAA,IAAI,CAACK,IAAI,CAACL,IAAI,CAAC,CAAA;IACjB,KAAA;IACF,GAAA;IAACV,EAAAA,YAAA,CAAAS,OAAA,EAAA,CAAA;QAAA5H,GAAA,EAAA,MAAA;IAAAuD,IAAAA,KAAA,EACD,SAAA2E,IAAKL,CAAAA,IAAI,EAAE;IACT;UACA/H,MAAM,CAACqI,IAAI,CAACN,IAAI,CAAC,CAACxI,OAAO,CAAC,UAACW,GAAG,EAAA;YAAA,OAAKoI,cAAc,CAACP,IAAI,EAAE7H,GAAG,EAAE6H,IAAI,CAAC7H,GAAG,CAAC,CAAC,CAAA;WAAC,CAAA,CAAA;IAC1E,KAAA;IAAC,GAAA,EAAA;QAAAA,GAAA,EAAA,cAAA;IAAAuD,IAAAA,KAAA,EACD,SAAAsD,YAAagB,CAAAA,IAAI,EAAE;IACjB;IACAA,MAAAA,IAAI,CAACxI,OAAO,CAAC,UAACgJ,IAAI,EAAA;YAAA,OAAKC,OAAO,CAACD,IAAI,CAAC,CAAA;WAAC,CAAA,CAAA;IACvC,KAAA;IAAC,GAAA,CAAA,CAAA,CAAA;IAAA,EAAA,OAAAT,OAAA,CAAA;IAAA,CAAA,EAAA,CAAA;IAEH,SAASW,WAAWA,CAAChF,KAAK,EAAE;IAC1B,EAAA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACzC,MAAM,EAAEiD,CAAC,EAAE,EAAE;IACrCR,IAAAA,KAAK,CAACQ,CAAC,CAAC,CAACsC,MAAM,IAAI9C,KAAK,CAACQ,CAAC,CAAC,CAACsC,MAAM,CAACS,GAAG,CAACM,MAAM,EAAE,CAAA;QAC/C,IAAIrB,KAAK,CAACiC,OAAO,CAACzE,KAAK,CAACQ,CAAC,CAAC,CAAC,EAAE;IAC3BwE,MAAAA,WAAW,CAAChF,KAAK,CAACQ,CAAC,CAAC,CAAC,CAAA;IACvB,KAAA;IACF,GAAA;IACF,CAAA;IACO,SAASqE,cAAcA,CAACf,MAAM,EAAErH,GAAG,EAAEuD,KAAK,EAAE;IACjD;IACA,EAAA,IAAIiF,OAAO,GAAGF,OAAO,CAAC/E,KAAK,CAAC,CAAC;IAC7B,EAAA,IAAIuD,GAAG,GAAG,IAAIE,GAAG,EAAE,CAAC;IACpBlH,EAAAA,MAAM,CAACgI,cAAc,CAACT,MAAM,EAAErH,GAAG,EAAE;QACjCyI,GAAG,EAAA,SAAAA,MAAG;UACJ,IAAIzB,GAAG,CAACK,MAAM,EAAE;IACdP,QAAAA,GAAG,CAACM,MAAM,EAAE,CAAC;IACb,QAAA,IAAIoB,OAAO,EAAE;IACXA,UAAAA,OAAO,CAAC1B,GAAG,CAACM,MAAM,EAAE,CAAA;IACpB,UAAA,IAAIrB,KAAK,CAACiC,OAAO,CAACzE,KAAK,CAAC,EAAE;gBACxBgF,WAAW,CAAChF,KAAK,CAAC,CAAA;IACpB,WAAA;IACF,SAAA;IACF,OAAA;IACA,MAAA,OAAOA,KAAK,CAAA;SACb;QACDmF,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;UACZ,IAAIpF,KAAK,KAAKoF,QAAQ,EAAE,OAAA;UACxBL,OAAO,CAACK,QAAQ,CAAC,CAAA;IACjBpF,MAAAA,KAAK,GAAGoF,QAAQ,CAAA;IAChB7B,MAAAA,GAAG,CAACC,MAAM,EAAE,CAAC;IACf,KAAA;IACF,GAAC,CAAC,CAAA;IACJ,CAAA;;IACO,SAASuB,OAAOA,CAACT,IAAI,EAAE;IAC5B;MACA,IAAIe,OAAA,CAAOf,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE;IAC7C,IAAA,OAAO,IAAI,CAAA;IACb,GAAA;IACA,EAAA,IAAIA,IAAI,CAACxB,MAAM,YAAYuB,OAAO,EAAE;IAClC;QACA,OAAOC,IAAI,CAACxB,MAAM,CAAA;IACpB,GAAA;IACA;IACA,EAAA,OAAO,IAAIuB,OAAO,CAACC,IAAI,CAAC,CAAA;IAC1B;;IC7EA,IAAIgB,KAAK,GAAG,EAAE,CAAA;IACd,IAAIC,GAAG,GAAG,EAAE,CAAA;IACZ,IAAIC,OAAO,GAAG,KAAK,CAAC;;IAEpB,SAASC,mBAAmBA,GAAG;IAC3B,EAAA,IAAIC,UAAU,GAAGJ,KAAK,CAACnE,KAAK,CAAC,CAAC,CAAC,CAAA;IAC/BmE,EAAAA,KAAK,GAAG,EAAE,CAAA;MACVC,GAAG,GAAG,EAAE,CAAA;IACRC,EAAAA,OAAO,GAAG,KAAK,CAAA;IACfE,EAAAA,UAAU,CAAC5J,OAAO,CAAC,UAAA6J,CAAC,EAAA;QAAA,OAAIA,CAAC,CAACC,GAAG,EAAE,CAAA;IAAA,GAAA,CAAC,CAAC;IACrC,CAAA;;IAEA,IAAIC,SAAS,GAAG,EAAE,CAAA;IAClB,IAAIC,OAAO,GAAG,KAAK,CAAA;IACnB,SAASC,cAAcA,GAAG;IACtBD,EAAAA,OAAO,GAAG,KAAK,CAAA;IACf,EAAA,IAAIE,GAAG,GAAGH,SAAS,CAAC1E,KAAK,CAAC,CAAC,CAAC,CAAA;IAC5B0E,EAAAA,SAAS,GAAG,EAAE,CAAA;IACdG,EAAAA,GAAG,CAAClK,OAAO,CAAC,UAAAmK,EAAE,EAAA;IAAA,IAAA,OAAIA,EAAE,EAAE,CAAA;OAAC,CAAA,CAAA;IAC3B,CAAA;IACA;IACA,IAAIC,QAAQ,CAAA;IACZ,IAAIC,OAAO,EAAE;MACTD,QAAQ,GAAG,SAAAA,QAAAA,GAAM;IACbC,IAAAA,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAACN,cAAc,CAAC,CAAA;OACzC,CAAA;IACL,CAAC,MAAM,IAAIO,gBAAgB,EAAE;IACzB,EAAA,IAAIC,QAAQ,GAAG,IAAID,gBAAgB,CAACP,cAAc,CAAC,CAAA;IACnD,EAAA,IAAIS,QAAQ,GAAGC,cAAc,CAAC,CAAC,CAAC,CAAA;IAChCF,EAAAA,QAAQ,CAACxB,OAAO,CAACyB,QAAQ,EAAE;IACvBE,IAAAA,aAAa,EAAE,IAAA;IACnB,GAAC,CAAC,CAAA;MACFR,QAAQ,GAAG,SAAAA,QAAAA,GAAM;QACbM,QAAQ,CAACG,WAAW,GAAG,CAAC,CAAA;OAC3B,CAAA;IACL,CAAC,MAAM,IAAIC,YAAY,EAAE;MACrBV,QAAQ,GAAG,SAAAA,QAAAA,GAAM;QACbU,YAAY,CAACb,cAAc,CAAC,CAAA;OAC/B,CAAA;IACL,CAAC,MAAM;IACHc,EAAAA,UAAU,CAAC,YAAM;IACbd,IAAAA,cAAc,EAAE,CAAA;OACnB,EAAE,CAAC,CAAC,CAAA;IACT,CAAA;IACO,SAASe,QAAQA,CAACb,EAAE,EAAE;IAAE;IAC3BJ,EAAAA,SAAS,CAACvG,IAAI,CAAC2G,EAAE,CAAC,CAAA;MAClB,IAAI,CAACH,OAAO,EAAE;IACVI,IAAAA,QAAQ,EAAE,CAAC;IACf,GAAA;IACJ,CAAA;;IACA,SAASa,YAAYA,CAAC9C,OAAO,EAAE;IAC3B,EAAA,IAAMpG,EAAE,GAAGoG,OAAO,CAACpG,EAAE,CAAA;IACrB,EAAA,IAAI,CAAC0H,GAAG,CAAC1H,EAAE,CAAC,EAAE;IACVyH,IAAAA,KAAK,CAAChG,IAAI,CAAC2E,OAAO,CAAC,CAAA;IACnBsB,IAAAA,GAAG,CAAC1H,EAAE,CAAC,GAAG,IAAI,CAAA;IACd;QACA,IAAI,CAAC2H,OAAO,EAAE;UACVsB,QAAQ,CAACrB,mBAAmB,CAAC,CAAA;IAC7BD,MAAAA,OAAO,GAAG,IAAI,CAAA;IAClB,KAAA;IACJ,GAAA;IACJ,CAAA;IAEA,IAAI3H,EAAE,GAAG,CAAC,CAAA;IAAA,IACJmJ,OAAO,gBAAA,YAAA;MACT,SAAAA,OAAAA,CAAYC,EAAE,EAAEC,QAAQ,EAAErK,OAAO,EAAEoJ,EAAE,EAAE;IAAAvC,IAAAA,eAAA,OAAAsD,OAAA,CAAA,CAAA;IAAE;IACrC,IAAA,IAAI,CAACnJ,EAAE,GAAGA,EAAE,EAAE,CAAA;IACd,IAAA,IAAI,CAACsJ,aAAa,GAAGtK,OAAO,CAAC;IAC7B,IAAA,IAAI,OAAOqK,QAAQ,KAAK,QAAQ,EAAE;UAC9B,IAAI,CAACE,MAAM,GAAG,YAAY;YACtB,OAAOH,EAAE,CAACC,QAAQ,CAAC,CAAA;WACtB,CAAA;IACL,KAAC,MAAM;IACH,MAAA,IAAI,CAACE,MAAM,GAAGF,QAAQ,CAAC;IAC3B,KAAA;;IACA,IAAA,IAAI,CAACG,IAAI,GAAG,EAAE,CAAC;IACf,IAAA,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,EAAE,CAAA;IACvB,IAAA,IAAI,CAACC,IAAI,GAAG3K,OAAO,CAAC2K,IAAI,CAAA;IACxB,IAAA,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,IAAI,CAAC;QACvB,IAAI,CAACvB,EAAE,GAAGA,EAAE,CAAA;QACZ,IAAI,CAACgB,EAAE,GAAGA,EAAE,CAAA;IACZ,IAAA,IAAI,CAACS,IAAI,GAAG7K,OAAO,CAAC6K,IAAI,CAAC;IACzB,IAAA,IAAI,CAAC1H,KAAK,GAAG,IAAI,CAACwH,IAAI,GAAGhK,SAAS,GAAG,IAAI,CAAC0H,GAAG,EAAE,CAAA;IACnD,GAAA;IAACtB,EAAAA,YAAA,CAAAoD,OAAA,EAAA,CAAA;QAAAvK,GAAA,EAAA,UAAA;QAAAuD,KAAA,EACD,SAAA2H,QAAAA,GAAW;IACP,MAAA,IAAI,CAAC3H,KAAK,GAAG,IAAI,CAACkF,GAAG,EAAE,CAAA;UACvB,IAAI,CAACuC,KAAK,GAAG,KAAK,CAAA;IACtB,KAAA;IAAC,GAAA,EAAA;QAAAhL,GAAA,EAAA,KAAA;QAAAuD,KAAA,EACD,SAAAkF,GAAAA,GAAM;UACFf,UAAU,CAAC,IAAI,CAAC,CAAC;IACjB,MAAA,IAAInE,KAAK,GAAG,IAAI,CAACoH,MAAM,CAACjE,IAAI,CAAC,IAAI,CAAC8D,EAAE,CAAC,CAAC;IACtC7C,MAAAA,SAAS,EAAE,CAAA;IACX,MAAA,OAAOpE,KAAK,CAAA;IAChB,KAAA;IAAC,GAAA,EAAA;QAAAvD,GAAA,EAAA,QAAA;IAAAuD,IAAAA,KAAA,EACD,SAAA+D,MAAOR,CAAAA,GAAG,EAAE;IAAE;IACV,MAAA,IAAI1F,EAAE,GAAG0F,GAAG,CAAC1F,EAAE,CAAA;UACf,IAAI,CAAC,IAAI,CAACyJ,MAAM,CAAC/B,GAAG,CAAC1H,EAAE,CAAC,EAAE;IACtB,QAAA,IAAI,CAACwJ,IAAI,CAAC/H,IAAI,CAACiE,GAAG,CAAC,CAAA;IACnB,QAAA,IAAI,CAAC+D,MAAM,CAACM,GAAG,CAAC/J,EAAE,CAAC,CAAC;IACpB0F,QAAAA,GAAG,CAACS,MAAM,CAAC,IAAI,CAAC,CAAA;IACpB,OAAA;IACJ,KAAA;IAAC,GAAA,EAAA;QAAAvH,GAAA,EAAA,QAAA;QAAAuD,KAAA,EACD,SAAA6D,MAAAA,GAAS;IACL,MAAA,IAAIrD,CAAC,GAAG,IAAI,CAAC6G,IAAI,CAAC9J,MAAM,CAAA;UACxB,OAAOiD,CAAC,EAAE,EAAE;YACR,IAAI,CAAC6G,IAAI,CAAC7G,CAAC,CAAC,CAACqD,MAAM,EAAE,CAAC;IAC1B,OAAA;IACJ,KAAA;IAAC,GAAA,EAAA;QAAApH,GAAA,EAAA,QAAA;QAAAuD,KAAA,EACD,SAAAkE,MAAAA,GAAS;UACL,IAAI,IAAI,CAACsD,IAAI,EAAE;IACX;YACA,IAAI,CAACC,KAAK,GAAG,IAAI,CAAA;IACrB,OAAC,MAAM;YACHV,YAAY,CAAC,IAAI,CAAC,CAAC;IACvB,OAAA;IACJ,KAAA;IAAC,GAAA,EAAA;QAAAtK,GAAA,EAAA,KAAA;QAAAuD,KAAA,EACD,SAAA4F,GAAAA,GAAM;IACF,MAAA,IAAIiC,QAAQ,GAAG,IAAI,CAAC7H,KAAK,CAAA;IACzB,MAAA,IAAI8H,QAAQ,GAAG,IAAI,CAAC5C,GAAG,EAAE,CAAA;UACzB,IAAI,IAAI,CAACwC,IAAI,EAAE;IACX,QAAA,IAAI,CAACzB,EAAE,CAAC9C,IAAI,CAAC,IAAI,CAAC8D,EAAE,EAACY,QAAQ,EAAEC,QAAQ,CAAC,CAAA;IAC5C,OAAA;IACJ,KAAA;IAAC,GAAA,CAAA,CAAA,CAAA;IAAA,EAAA,OAAAd,OAAA,CAAA;IAAA,CAEL,EAAA,CAAA;;IC3HO,SAASe,SAASA,CAACd,EAAE,EAAE;IAC1B;IACA,EAAA,IAAMe,IAAI,GAAGf,EAAE,CAACgB,QAAQ,CAAA;MACxB,IAAID,IAAI,CAAC1D,IAAI,EAAE;QACX4D,QAAQ,CAACjB,EAAE,CAAC,CAAA;IAChB,GAAA;MACA,IAAIe,IAAI,CAACG,QAAQ,EAAE;QACfC,YAAY,CAACnB,EAAE,CAAC,CAAA;IACpB,GAAA;MACA,IAAIe,IAAI,CAACK,KAAK,EAAE;QACZC,SAAS,CAACrB,EAAE,CAAC,CAAA;IACjB,GAAA;IACJ,CAAA;IACA,SAASqB,SAASA,CAACrB,EAAE,EAAE;IACnB,EAAA,IAAIoB,KAAK,GAAGpB,EAAE,CAACgB,QAAQ,CAACI,KAAK,CAAA;IAC7B,EAAA,KAAK,IAAI5L,GAAG,IAAI4L,KAAK,EAAE;IACnB,IAAA,IAAIE,OAAO,GAAGF,KAAK,CAAC5L,GAAG,CAAC,CAAA;IACxB,IAAA,IAAI+F,KAAK,CAACiC,OAAO,CAAC4D,KAAK,CAAC,EAAE;IACtB,MAAA,KAAK,IAAI7H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6H,KAAK,CAAC9K,MAAM,EAAEiD,CAAC,EAAE,EAAE;YACnCgI,UAAU,CAACvB,EAAE,EAAExK,GAAG,EAAE8L,OAAO,CAAC/H,CAAC,CAAC,CAAC,CAAA;IACnC,OAAA;IACJ,KAAC,MAAM;IACHgI,MAAAA,UAAU,CAACvB,EAAE,EAAExK,GAAG,EAAE8L,OAAO,CAAC,CAAA;IAChC,KAAA;IACJ,GAAA;IACJ,CAAA;IACA,SAASC,UAAUA,CAACvB,EAAE,EAAExK,GAAG,EAAE8L,OAAO,EAAE;IAClC;IACA,EAAA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC7BA,IAAAA,OAAO,GAAGtB,EAAE,CAACsB,OAAO,CAAC,CAAA;IACzB,GAAA;IACA,EAAA,OAAOtB,EAAE,CAACwB,MAAM,CAAChM,GAAG,EAAE8L,OAAO,CAAC,CAAA;IAClC,CAAA;IACA,SAASG,KAAKA,CAACzB,EAAE,EAAEnD,MAAM,EAAErH,GAAG,EAAE;IAC5B;IACAF,EAAAA,MAAM,CAACgI,cAAc,CAAC0C,EAAE,EAAExK,GAAG,EAAE;QAC3ByI,GAAG,EAAA,SAAAA,MAAG;IACF,MAAA,OAAO+B,EAAE,CAACnD,MAAM,CAAC,CAACrH,GAAG,CAAC,CAAA;SACzB;QACD0I,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;IACV6B,MAAAA,EAAE,CAACnD,MAAM,CAAC,CAACrH,GAAG,CAAC,GAAG2I,QAAQ,CAAA;IAC9B,KAAA;IACJ,GAAC,CAAC,CAAA;IACN,CAAA;IACA,SAAS8C,QAAQA,CAACjB,EAAE,EAAE;IAClB;IACA,EAAA,IAAI3C,IAAI,GAAG2C,EAAE,CAACgB,QAAQ,CAAC3D,IAAI,CAAA;IAC3BA,EAAAA,IAAI,GAAG,OAAOA,IAAI,IAAI,UAAU,GAAGA,IAAI,CAACnB,IAAI,CAAC8D,EAAE,CAAC,GAAG3C,IAAI,CAAA;MACvD2C,EAAE,CAAC0B,KAAK,GAAGrE,IAAI,CAAA;IACf;IACA,EAAA,KAAK,IAAI7H,GAAG,IAAI6H,IAAI,EAAE;IAClBoE,IAAAA,KAAK,CAACzB,EAAE,EAAE,OAAO,EAAExK,GAAG,CAAC,CAAA;IAC3B,GAAA;MACAsI,OAAO,CAACT,IAAI,CAAC,CAAA;IACjB,CAAA;IAEA,SAAS8D,YAAYA,CAACnB,EAAE,EAAE;IACtB,EAAA,IAAMkB,QAAQ,GAAGlB,EAAE,CAACgB,QAAQ,CAACE,QAAQ,CAAA;MACrC,IAAMS,QAAQ,GAAG3B,EAAE,CAAC4B,eAAe,GAAG,EAAE,CAAC;IACzC,EAAA,KAAK,IAAIpM,GAAG,IAAI0L,QAAQ,EAAE;IACtB,IAAA,IAAIW,OAAO,GAAGX,QAAQ,CAAC1L,GAAG,CAAC,CAAA;IAC3B;QACA,IAAIsM,EAAE,GAAG,OAAOD,OAAO,KAAK,UAAU,GAAGA,OAAO,GAAGA,OAAO,CAAC5D,GAAG,CAAA;QAC9D0D,QAAQ,CAACnM,GAAG,CAAC,GAAG,IAAIuK,OAAO,CAACC,EAAE,EAAE8B,EAAE,EAAE;IAAEvB,MAAAA,IAAI,EAAE,IAAA;IAAK,KAAC,CAAC,CAAA;IACnDwB,IAAAA,cAAc,CAAC/B,EAAE,EAAExK,GAAG,EAAEqM,OAAO,CAAC,CAAA;IACpC,GAAA;IACJ,CAAA;IACA,SAASE,cAAcA,CAAClF,MAAM,EAAErH,GAAG,EAAEqM,OAAO,EAAE;MAC1C,IAAMG,MAAM,GAAGH,OAAO,CAAC3D,GAAG,IAAK,YAAM,EAAI,CAAA;IACzC5I,EAAAA,MAAM,CAACgI,cAAc,CAACT,MAAM,EAAErH,GAAG,EAAE;IAC/ByI,IAAAA,GAAG,EAAEgE,oBAAoB,CAACzM,GAAG,CAAC;IAC9B0I,IAAAA,GAAG,EAAE8D,MAAAA;IACT,GAAC,CAAC,CAAA;IACN,CAAA;IACA,SAASC,oBAAoBA,CAACzM,GAAG,EAAE;IAC/B;IACA,EAAA,OAAO,YAAY;IACf,IAAA,IAAMwH,OAAO,GAAG,IAAI,CAAC4E,eAAe,CAACpM,GAAG,CAAC,CAAA;QACzC,IAAIwH,OAAO,CAACwD,KAAK,EAAE;IACf;UACAxD,OAAO,CAAC0D,QAAQ,EAAE,CAAA;IACtB,KAAA;QACA,IAAIlE,GAAG,CAACK,MAAM,EAAE;IAAE;UACdG,OAAO,CAACJ,MAAM,EAAE,CAAA;IACpB,KAAA;QACA,OAAOI,OAAO,CAACjE,KAAK,CAAA;OACvB,CAAA;IACL,CAAA;IACO,SAASmJ,cAAcA,CAAClM,GAAG,EAAE;IAChCA,EAAAA,GAAG,CAACS,SAAS,CAAC0L,SAAS,GAAGtC,QAAQ,CAAA;IAClC;MACA7J,GAAG,CAACS,SAAS,CAAC+K,MAAM,GAAG,UAAUvB,QAAQ,EAAEjB,EAAE,EAAE;IAC3C,IAAA,IAAIe,OAAO,CAAC,IAAI,EAAEE,QAAQ,EAAE;IAAEQ,MAAAA,IAAI,EAAE,IAAA;SAAM,EAAEzB,EAAE,CAAC,CAAA;OAClD,CAAA;IACL;;ICjGA,IAAMoD,aAAa,GAAG,SAAhBA,aAAaA,CAAIpK,GAAG,EAAK;IAC3B,EAAA,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAACqK,QAAQ,CAACrK,GAAG,CAAC,CAAA;IACxE,CAAC,CAAA;IACM,SAASsK,aAAaA,CAACtC,EAAE,EAAEhI,GAAG,EAA0B;IAAA,EAAA,IAAxBqF,IAAI,GAAAhH,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;MAC5C,IAAIgH,IAAI,IAAI,IAAI,EAAE;QACdA,IAAI,GAAG,EAAE,CAAA;IACb,GAAA;IACA,EAAA,IAAI7H,GAAG,GAAG6H,IAAI,CAAC7H,GAAG,CAAA;IAClB,EAAA,IAAIA,GAAG,EAAE;QACL,OAAO6H,IAAI,CAAC7H,GAAG,CAAA;IACnB,GAAA;MAAC,KAAAsG,IAAAA,IAAA,GAAAzF,SAAA,CAAAC,MAAA,EAPgD2B,QAAQ,OAAAsD,KAAA,CAAAO,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAE,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA,EAAA,EAAA;IAAR/D,IAAAA,QAAQ,CAAA+D,IAAA,GAAA3F,CAAAA,CAAAA,GAAAA,SAAA,CAAA2F,IAAA,CAAA,CAAA;IAAA,GAAA;IAQzD,EAAA,IAAIoG,aAAa,CAACpK,GAAG,CAAC,EAAE;IACpB,IAAA,OAAOuK,KAAK,CAACvC,EAAE,EAAEhI,GAAG,EAAEqF,IAAI,EAAEpF,QAAQ,EAAEoF,IAAI,CAAC7H,GAAG,EAAE,IAAI,CAAC,CAAA;IACzD,GAAC,MAAM;IACH;QACA,IAAIgN,IAAI,GAAGxC,EAAE,CAACgB,QAAQ,CAAC9L,UAAU,CAAC8C,GAAG,CAAC,CAAE;IACxC;IACA,IAAA,OAAOyK,oBAAoB,CAACzC,EAAE,EAAEhI,GAAG,EAAExC,GAAG,EAAE6H,IAAI,EAAEpF,QAAQ,EAAEuK,IAAI,CAAC,CAAA;IACnE,GAAA;IACJ,CAAA;IACA,SAASC,oBAAoBA,CAACzC,EAAE,EAAEhI,GAAG,EAAExC,GAAG,EAAE6H,IAAI,EAAEpF,QAAQ,EAAEuK,IAAI,EAAE;IAC9D,EAAA,IAAIpE,OAAA,CAAOoE,IAAI,CAAA,KAAK,QAAQ,EAAE;QAC1BA,IAAI,GAAGxC,EAAE,CAACgB,QAAQ,CAAC/K,KAAK,CAACE,MAAM,CAACqM,IAAI,CAAC,CAAA;IACzC,GAAA;MACAnF,IAAI,CAACvI,IAAI,GAAG;QACR4N,IAAI,EAAA,SAAAA,IAACH,CAAAA,KAAK,EAAE;IACR;IACA;UACA,IAAII,QAAQ,GAAGJ,KAAK,CAACK,iBAAiB,GAAG,IAAIL,KAAK,CAACM,gBAAgB,CAACL,IAAI,EAAA,CAAA;UACxEG,QAAQ,CAACG,MAAM,EAAE,CAAC;IACtB,KAAA;OACH,CAAA;;IACD,EAAA,OAAOP,KAAK,CAACvC,EAAE,EAAEhI,GAAG,EAAEqF,IAAI,EAAEpF,QAAQ,EAAEzC,GAAG,EAAE,IAAI,EAAE;IAAEgN,IAAAA,IAAI,EAAJA,IAAAA;IAAK,GAAC,CAAC,CAAA;IAC9D,CAAA;IACO,SAAShD,gBAAcA,CAACQ,EAAE,EAAEvH,IAAI,EAAE;IACrC,EAAA,OAAO8J,KAAK,CAACvC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAEvH,IAAI,CAAC,CAAA;IAClD,CAAA;IACA,SAAS8J,KAAKA,CAACvC,EAAE,EAAEhI,GAAG,EAAEqF,IAAI,EAAEpF,QAAQ,EAAEzC,GAAG,EAAEiD,IAAI,EAAEoK,gBAAgB,EAAE;MACjE,OAAO;IACH7C,IAAAA,EAAE,EAAFA,EAAE;IAAEhI,IAAAA,GAAG,EAAHA,GAAG;IAAEqF,IAAAA,IAAI,EAAJA,IAAI;IAAEpF,IAAAA,QAAQ,EAARA,QAAQ;IAAEzC,IAAAA,GAAG,EAAHA,GAAG;IAAEiD,IAAAA,IAAI,EAAJA,IAAI;QAAEoK,gBAAgB,EAAhBA,gBAAgB;OACvD,CAAA;IACL,CAAA;;IACO,SAASE,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAE;IACxC,EAAA,OAAOD,MAAM,CAAChL,GAAG,KAAKiL,MAAM,CAACjL,GAAG,IAAIgL,MAAM,CAACxN,GAAG,KAAKyN,MAAM,CAACzN,GAAG,CAAA;IACjE;;IC1CA,SAAS0N,eAAeA,CAACX,KAAK,EAAE;IAC5B,EAAA,IAAIhJ,CAAC,GAAGgJ,KAAK,CAAClF,IAAI,CAAA;IAClB,EAAA,IAAI,CAAC9D,CAAC,GAAGA,CAAC,CAACzE,IAAI,MAAMyE,CAAC,GAAGA,CAAC,CAACmJ,IAAI,CAAC,EAAE;QAC9BnJ,CAAC,CAACgJ,KAAK,CAAC,CAAC;IACb,GAAA;;MACA,IAAGA,KAAK,CAACK,iBAAiB,EAAC;IACvB,IAAA,OAAO,IAAI,CAAA;IACf,GAAA;IACJ,CAAA;IACO,SAASO,SAASA,CAACZ,KAAK,EAAE;IAC7B,EAAA,IAAMvK,GAAG,GAA2BuK,KAAK,CAAnCvK,GAAG;QAAEqF,IAAI,GAAqBkF,KAAK,CAA9BlF,IAAI;QAAEpF,QAAQ,GAAWsK,KAAK,CAAxBtK,QAAQ;QAAEQ,IAAI,GAAK8J,KAAK,CAAd9J,IAAI,CAAA;IAC/B,EAAA,IAAI,OAAOT,GAAG,KAAK,QAAQ,EAAE;IACzB;IACA,IAAA,IAAIkL,eAAe,CAACX,KAAK,CAAC,EAAE;IAAE;IAC1B,MAAA,OAAOA,KAAK,CAACK,iBAAiB,CAACQ,GAAG,CAAA;IACtC,KAAA;QACAb,KAAK,CAACc,EAAE,GAAGC,QAAQ,CAAChB,aAAa,CAACtK,GAAG,CAAC,CAAC;QACvCuL,UAAU,CAAChB,KAAK,CAACc,EAAE,EAAE,EAAE,EAAEhG,IAAI,CAAC,CAAA;IAC9BpF,IAAAA,QAAQ,CAACpD,OAAO,CAAC,UAACoD,QAAQ,EAAK;IAC3B;UACAsK,KAAK,CAACc,EAAE,CAACG,WAAW,CAACL,SAAS,CAAClL,QAAQ,CAAC,CAAC,CAAA;IAC7C,KAAC,CAAC,CAAA;IACN,GAAC,MAAM;IACH;QACAsK,KAAK,CAACc,EAAE,GAAGC,QAAQ,CAAC9D,cAAc,CAAC/G,IAAI,CAAC,CAAA;IAC5C,GAAA;IACA,EAAA,OAAO8J,KAAK,CAACc,EAAE,CAAC;IACpB,CAAA;;IACA,SAASE,UAAUA,CAACF,EAAE,EAA6B;IAAA,EAAA,IAA3BI,QAAQ,GAAApN,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAAA,EAAA,IAAEqN,KAAK,GAAArN,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAC7C;IACA,EAAA,IAAIsN,SAAS,GAAGF,QAAQ,CAACG,KAAK,IAAI,EAAE,CAAA;IACpC,EAAA,IAAIC,SAAS,GAAGH,KAAK,CAACE,KAAK,IAAI,EAAE,CAAA;IACjC,EAAA,KAAK,IAAIpO,GAAG,IAAImO,SAAS,EAAE;IAAE;IACzB,IAAA,IAAI,CAACE,SAAS,CAACrO,GAAG,CAAC,EAAE;IACjB6N,MAAAA,EAAE,CAACO,KAAK,CAACpO,GAAG,CAAC,GAAG,EAAE,CAAA;IACtB,KAAA;IACJ,GAAA;IACA,EAAA,KAAK,IAAIA,IAAG,IAAIiO,QAAQ,EAAE;IAAE;IACxB,IAAA,IAAI,CAACC,KAAK,CAAClO,IAAG,CAAC,EAAE;IACb6N,MAAAA,EAAE,CAACS,eAAe,CAACtO,IAAG,CAAC,CAAA;IAC3B,KAAA;IACJ,GAAA;IACA,EAAA,KAAK,IAAIA,KAAG,IAAIkO,KAAK,EAAE;IAAE;QACrB,IAAIlO,KAAG,KAAK,OAAO,EAAE;IACjB,MAAA,KAAK,IAAIuO,SAAS,IAAIL,KAAK,CAAClO,KAAG,CAAC,EAAE;YAC9B6N,EAAE,CAACO,KAAK,CAACG,SAAS,CAAC,GAAGL,KAAK,CAACE,KAAK,CAACG,SAAS,CAAC,CAAA;IAChD,OAAA;IACJ,KAAC,MAAM;UACHV,EAAE,CAACW,YAAY,CAACxO,KAAG,EAAEkO,KAAK,CAAClO,KAAG,CAAC,CAAC,CAAA;IACpC,KAAA;IACJ,GAAA;IACJ,CAAA;IACO,SAASyO,KAAKA,CAACC,QAAQ,EAAE3B,KAAK,EAAE;MACnC,IAAG,CAAC2B,QAAQ,EAAC;IAAE;IACX,IAAA,OAAOf,SAAS,CAACZ,KAAK,CAAC,CAAC;IAC5B,GAAA;;MACA,IAAM4B,aAAa,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,QAAQ,CAAC;IACpD,EAAA,IAAID,aAAa,EAAE;QACf,IAAME,MAAM,GAAGH,QAAQ,CAAA;IACvB;IACA,IAAA,IAAMI,UAAU,GAAGD,MAAM,CAACC,UAAU,CAAA;IACpC,IAAA,IAAIjB,EAAE,GAAGF,SAAS,CAACZ,KAAK,CAAC,CAAA;QACzB+B,UAAU,CAACC,YAAY,CAAClB,EAAE,EAAEgB,MAAM,CAACG,WAAW,CAAC,CAAA;IAC/CF,IAAAA,UAAU,CAACG,WAAW,CAACJ,MAAM,CAAC,CAAA;IAC9B,IAAA,OAAOhB,EAAE,CAAA;IACb,GAAC,MAAM;IACH;IACA;IACA;IACA;IACAqB,IAAAA,UAAU,CAACR,QAAQ,EAAE3B,KAAK,CAAC,CAAA;IAC/B,GAAA;IACJ,CAAA;IACA,SAASoC,aAAaA,CAACtB,EAAE,EAAEuB,WAAW,EAAE;IACpC,EAAA,KAAK,IAAIrL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqL,WAAW,CAACtO,MAAM,EAAEiD,CAAC,EAAE,EAAE;IACzC,IAAA,IAAI5D,KAAK,GAAGiP,WAAW,CAACrL,CAAC,CAAC,CAAA;IAC1B8J,IAAAA,EAAE,CAACG,WAAW,CAACL,SAAS,CAACxN,KAAK,CAAC,CAAC,CAAA;IACpC,GAAA;IACJ,CAAA;IACA,SAAS+O,UAAUA,CAACR,QAAQ,EAAE3B,KAAK,EAAE;IACjC,EAAA,IAAI,CAACQ,WAAW,CAACmB,QAAQ,EAAE3B,KAAK,CAAC,EAAE;IAC/B,IAAA,IAAIc,GAAE,GAAGF,SAAS,CAACZ,KAAK,CAAC,CAAA;IACzB2B,IAAAA,QAAQ,CAACb,EAAE,CAACiB,UAAU,CAACO,YAAY,CAACxB,GAAE,EAAEa,QAAQ,CAACb,EAAE,CAAC,CAAA;IACpD,IAAA,OAAOA,GAAE,CAAA;IACb,GAAA;IACA;MACA,IAAIA,EAAE,GAAGd,KAAK,CAACc,EAAE,GAAGa,QAAQ,CAACb,EAAE,CAAC;IAChC,EAAA,IAAI,CAACa,QAAQ,CAAClM,GAAG,EAAE;IAAE;IACjB,IAAA,IAAIkM,QAAQ,CAACzL,IAAI,KAAK8J,KAAK,CAAC9J,IAAI,EAAE;IAC9B4K,MAAAA,EAAE,CAAC3D,WAAW,GAAG6C,KAAK,CAAC9J,IAAI,CAAA;IAC/B,KAAA;IACA,IAAA,OAAA;IACJ,GAAA;IACA;IACA;MACA8K,UAAU,CAACF,EAAE,EAAEa,QAAQ,CAAC7G,IAAI,EAAEkF,KAAK,CAAClF,IAAI,CAAC,CAAA;;IAEzC;IACA;IACA,EAAA,IAAIyH,WAAW,GAAGZ,QAAQ,CAACjM,QAAQ,IAAI,EAAE,CAAA;IACzC,EAAA,IAAI2M,WAAW,GAAGrC,KAAK,CAACtK,QAAQ,IAAI,EAAE,CAAA;MACtC,IAAI6M,WAAW,CAACxO,MAAM,GAAG,CAAC,IAAIsO,WAAW,CAACtO,MAAM,GAAG,CAAC,EAAE;IAClD;IACAyO,IAAAA,cAAc,CAAC1B,EAAE,EAAEyB,WAAW,EAAEF,WAAW,CAAC,CAAA;IAChD,GAAC,MAAM,IAAIA,WAAW,CAACtO,MAAM,GAAG,CAAC,EAAE;IAC/BqO,IAAAA,aAAa,CAACtB,EAAE,EAAEuB,WAAW,CAAC,CAAA;IAClC,GAAC,MAAM,IAAIE,WAAW,CAACxO,MAAM,GAAG,CAAC,EAAE;QAC/B+M,EAAE,CAAC2B,SAAS,GAAG,EAAE,CAAA;IACrB,GAAA;IACA,EAAA,OAAO3B,EAAE,CAAA;IACb,CAAA;IACA,SAAS0B,cAAcA,CAAC1B,EAAE,EAAEyB,WAAW,EAAEF,WAAW,EAAE;IAClD;MACA,IAAIK,aAAa,GAAG,CAAC,CAAA;MACrB,IAAIC,aAAa,GAAG,CAAC,CAAA;IACrB,EAAA,IAAIC,WAAW,GAAGL,WAAW,CAACxO,MAAM,GAAG,CAAC,CAAA;IACxC,EAAA,IAAI8O,WAAW,GAAGR,WAAW,CAACtO,MAAM,GAAG,CAAC,CAAA;IACxC,EAAA,IAAI+O,aAAa,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAA;IAClC,EAAA,IAAIQ,aAAa,GAAGV,WAAW,CAAC,CAAC,CAAC,CAAA;IAClC,EAAA,IAAIW,WAAW,GAAGT,WAAW,CAACK,WAAW,CAAC,CAAA;IAC1C,EAAA,IAAIK,WAAW,GAAGZ,WAAW,CAACQ,WAAW,CAAC,CAAA;MAC1C,SAASK,cAAcA,CAACxN,QAAQ,EAAE;QAC9B,IAAI8C,GAAG,GAAG,EAAE,CAAA;IACZ9C,IAAAA,QAAQ,CAACpD,OAAO,CAAC,UAACc,KAAK,EAAEgF,KAAK,EAAK;IAC/BI,MAAAA,GAAG,CAACpF,KAAK,CAACH,GAAG,CAAC,GAAGmF,KAAK,CAAA;IAC1B,KAAC,CAAC,CAAA;IACF,IAAA,OAAOI,GAAG,CAAA;IACd,GAAA;IACA,EAAA,IAAIA,GAAG,GAAG0K,cAAc,CAACX,WAAW,CAAC,CAAA;IACrC,EAAA,OAAOG,aAAa,IAAIE,WAAW,IAAID,aAAa,IAAIE,WAAW,EAAE;IAAE;QACnE,IAAI,CAACC,aAAa,EAAE;IAChBA,MAAAA,aAAa,GAAGP,WAAW,CAAC,EAAEG,aAAa,CAAC,CAAA;IAChD,KAAC,MAAM,IAAI,CAACM,WAAW,EAAE;IACrBA,MAAAA,WAAW,GAAGT,WAAW,CAAC,EAAEG,aAAa,CAAC,CAAA;IAC9C,KAAA;IACA;IACA;IACA,IAAA,IAAIlC,WAAW,CAACsC,aAAa,EAAEC,aAAa,CAAC,EAAE;IAC3CZ,MAAAA,UAAU,CAACW,aAAa,EAAEC,aAAa,CAAC,CAAC;IACzCD,MAAAA,aAAa,GAAGP,WAAW,CAAC,EAAEG,aAAa,CAAC,CAAA;IAC5CK,MAAAA,aAAa,GAAGV,WAAW,CAAC,EAAEM,aAAa,CAAC,CAAA;SAC/C,MAAM,IAAInC,WAAW,CAACwC,WAAW,EAAEC,WAAW,CAAC,EAAE;IAC9Cd,MAAAA,UAAU,CAACa,WAAW,EAAEC,WAAW,CAAC,CAAA;IACpCD,MAAAA,WAAW,GAAGT,WAAW,CAAC,EAAEK,WAAW,CAAC,CAAA;IACxCK,MAAAA,WAAW,GAAGZ,WAAW,CAAC,EAAEQ,WAAW,CAAC,CAAA;IACxC;SACH,MAAM,IAAIrC,WAAW,CAACwC,WAAW,EAAED,aAAa,CAAC,EAAE;IAChDZ,MAAAA,UAAU,CAACa,WAAW,EAAED,aAAa,CAAC,CAAA;UACtCjC,EAAE,CAACkB,YAAY,CAACgB,WAAW,CAAClC,EAAE,EAAEgC,aAAa,CAAChC,EAAE,CAAC,CAAA;IACjDkC,MAAAA,WAAW,GAAGT,WAAW,CAAC,EAAEK,WAAW,CAAC,CAAA;IACxCG,MAAAA,aAAa,GAAGV,WAAW,CAAC,EAAEM,aAAa,CAAC,CAAA;IAC5C;SACH,MAAM,IAAInC,WAAW,CAACsC,aAAa,EAAEG,WAAW,CAAC,EAAE;IAChDd,MAAAA,UAAU,CAACW,aAAa,EAAEG,WAAW,CAAC,CAAA;IACtCnC,MAAAA,EAAE,CAACkB,YAAY,CAACc,aAAa,CAAChC,EAAE,EAAEkC,WAAW,CAAClC,EAAE,CAACmB,WAAW,CAAC,CAAA;IAC7Da,MAAAA,aAAa,GAAGP,WAAW,CAAC,EAAEG,aAAa,CAAC,CAAA;IAC5CO,MAAAA,WAAW,GAAGZ,WAAW,CAAC,EAAEQ,WAAW,CAAC,CAAA;IACxC;IACJ,KAAC,MAAM;IACH;IACA;UACA,IAAIM,SAAS,GAAG3K,GAAG,CAACuK,aAAa,CAAC9P,GAAG,CAAC,CAAC;UACvC,IAAIkQ,SAAS,KAAKnP,SAAS,EAAE;IACzB,QAAA,IAAIoP,SAAS,GAAGb,WAAW,CAACY,SAAS,CAAC,CAAC;YACvCrC,EAAE,CAACkB,YAAY,CAACoB,SAAS,CAACtC,EAAE,EAAEgC,aAAa,CAAChC,EAAE,CAAC,CAAA;IAC/CyB,QAAAA,WAAW,CAACY,SAAS,CAAC,GAAGnP,SAAS,CAAC;IACnCmO,QAAAA,UAAU,CAACiB,SAAS,EAAEL,aAAa,CAAC,CAAA;IACxC,OAAC,MAAM;YACHjC,EAAE,CAACkB,YAAY,CAACpB,SAAS,CAACmC,aAAa,CAAC,EAAED,aAAa,CAAChC,EAAE,CAAC,CAAA;IAC/D,OAAA;IACAiC,MAAAA,aAAa,GAAGV,WAAW,CAAC,EAAEM,aAAa,CAAC,CAAA;IAChD,KAAA;IACJ,GAAA;MACA,IAAIA,aAAa,IAAIE,WAAW,EAAE;IAAE;QAChC,KAAK,IAAI7L,CAAC,GAAG2L,aAAa,EAAE3L,CAAC,IAAI6L,WAAW,EAAE7L,CAAC,EAAE,EAAE;UAC/C,IAAIqM,OAAO,GAAGzC,SAAS,CAACyB,WAAW,CAACrL,CAAC,CAAC,CAAC,CAAA;IACvC;IACA,MAAA,IAAIsM,MAAM,GAAGjB,WAAW,CAACQ,WAAW,GAAG,CAAC,CAAC,GAAGR,WAAW,CAACQ,WAAW,GAAG,CAAC,CAAC,CAAC/B,EAAE,GAAG,IAAI,CAAE;UACpFA,EAAE,CAACkB,YAAY,CAACqB,OAAO,EAAEC,MAAM,CAAC,CAAC;IACrC,KAAA;IACJ,GAAA;;MACA,IAAIZ,aAAa,IAAIE,WAAW,EAAE;IAAE;QAChC,KAAK,IAAI5L,EAAC,GAAG0L,aAAa,EAAE1L,EAAC,IAAI4L,WAAW,EAAE5L,EAAC,EAAE,EAAE;IAC/C,MAAA,IAAIuL,WAAW,CAACvL,EAAC,CAAC,EAAE;IAChB,QAAA,IAAIqM,QAAO,GAAGd,WAAW,CAACvL,EAAC,CAAC,CAAC8J,EAAE,CAAA;IAC/BA,QAAAA,EAAE,CAACoB,WAAW,CAACmB,QAAO,CAAC,CAAA;IAC3B,OAAA;IACJ,KAAA;IACJ,GAAA;IACJ,CAAA;IACA;;IC3LO,SAASE,cAAcA,CAAC9P,GAAG,EAAE;IAChCA,EAAAA,GAAG,CAACS,SAAS,CAACsP,EAAE,GAAG,YAAY;IAC3B;IACA,IAAA,OAAOzD,aAAa,CAAAnG,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAlH,MAAA,CAAAsG,KAAA,CAAA9E,SAAA,CAAAyD,KAAA,CAAAgC,IAAA,CAAK7F,SAAS,CAAC,CAAA,CAAA,CAAA;OAC3C,CAAA;IACDL,EAAAA,GAAG,CAACS,SAAS,CAACuP,EAAE,GAAG,YAAY;IAC3B,IAAA,OAAOxG,gBAAc,CAAArD,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAlH,MAAA,CAAAsG,KAAA,CAAA9E,SAAA,CAAAyD,KAAA,CAAAgC,IAAA,CAAK7F,SAAS,CAAC,CAAA,CAAA,CAAA;OAC5C,CAAA;IACDL,EAAAA,GAAG,CAACS,SAAS,CAACwP,EAAE,GAAG,UAAUlN,KAAK,EAAE;IAAE;QAClC,IAAIqF,OAAA,CAAOrF,KAAK,CAAA,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;IAC7C,MAAA,OAAOiB,IAAI,CAACC,SAAS,CAAClB,KAAK,CAAC,CAAA;IAChC,KAAA;IACA,IAAA,OAAOA,KAAK,CAAA;OACf,CAAA;IACD/C,EAAAA,GAAG,CAACS,SAAS,CAACyP,OAAO,GAAG,YAAY;QAChC,IAAMlG,EAAE,GAAG,IAAI,CAAA;IACf,IAAA,IAAM5E,MAAM,GAAG4E,EAAE,CAACgB,QAAQ,CAAC5F,MAAM,CAAA;IACjC,IAAA,IAAImH,KAAK,GAAGnH,MAAM,CAACc,IAAI,CAAC8D,EAAE,CAAC,CAAA;IAC3B,IAAA,OAAOuC,KAAK,CAAA;OACf,CAAA;IACDvM,EAAAA,GAAG,CAACS,SAAS,CAAC0P,OAAO,GAAG,UAAU5D,KAAK,EAAE;IAAE;IACvC;QACA,IAAMvC,EAAE,GAAG,IAAI,CAAA;IACf,IAAA,IAAMqD,EAAE,GAAGrD,EAAE,CAACoD,GAAG,CAAA;IACjB,IAAA,IAAMgD,SAAS,GAAGpG,EAAE,CAACqG,MAAM,CAAA;IAC3BrG,IAAAA,EAAE,CAACqG,MAAM,GAAG9D,KAAK,CAAC;IAClB,IAAA,IAAI6D,SAAS,EAAE;IACX;UACApG,EAAE,CAACoD,GAAG,GAAGa,KAAK,CAACmC,SAAS,EAAE7D,KAAK,CAAC,CAAA;IACpC,KAAC,MAAM;UACHvC,EAAE,CAACoD,GAAG,GAAGa,KAAK,CAACZ,EAAE,EAAEd,KAAK,CAAC,CAAA;IAC7B,KAAA;OACH,CAAA;IACL,CAAA;IACO,SAAS+D,cAAcA,CAACtG,EAAE,EAAEqD,EAAE,EAAE;IACnC,EAAA,SAAA;IACA;IACA;MACArD,EAAE,CAACoD,GAAG,GAAGC,EAAE,CAAA;IACX,EAAA,IAAMkD,eAAe,GAAG,SAAlBA,eAAeA,GAAS;IAC1B;IACAvG,IAAAA,EAAE,CAACmG,OAAO,CAACnG,EAAE,CAACkG,OAAO,EAAE,CAAC,CAAA;OAC3B,CAAA;IACD,EAAA,IAAInG,OAAO,CAACC,EAAE,EAAEuG,eAAe,EAAE,IAAI,CAAC,CAAA;IACtC;IACA;IACJ,CAAA;;IACO,SAASC,QAAQA,CAACxG,EAAE,EAAElL,IAAI,EAAE;IAC/B;IACA,EAAA,IAAM2R,QAAQ,GAAGzG,EAAE,CAACgB,QAAQ,CAAClM,IAAI,CAAC,CAAA;IAClC,EAAA,IAAI2R,QAAQ,EAAE;IACVA,IAAAA,QAAQ,CAAC5R,OAAO,CAAC,UAAAyM,OAAO,EAAI;IACxBA,MAAAA,OAAO,CAACpF,IAAI,CAAC8D,EAAE,CAAC,CAAA;IACpB,KAAC,CAAC,CAAA;IACN,GAAA;IACJ;;IC5DA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAMO,SAAS0G,SAASA,CAAC1Q,GAAG,EAAE;IAC3BA,EAAAA,GAAG,CAACS,SAAS,CAACD,KAAK,GAAG,UAAUZ,OAAO,EAAE;IACrC;QACA,IAAMoK,EAAE,GAAG,IAAI,CAAA;IAEfA,IAAAA,EAAE,CAACgB,QAAQ,GAAGvL,YAAY,CAAC,IAAI,CAACiB,WAAW,CAACd,OAAO,EAAEA,OAAO,CAAC,CAAC;;IAE9D4Q,IAAAA,QAAQ,CAACxG,EAAE,EAAE,cAAc,CAAC,CAAA;IAC5B;QACAc,SAAS,CAACd,EAAE,CAAC,CAAA;IACbwG,IAAAA,QAAQ,CAACxG,EAAE,EAAE,SAAS,CAAC,CAAA;IACvB;QACA,IAAIpK,OAAO,CAACyN,EAAE,EAAE;IACZrD,MAAAA,EAAE,CAAC8C,MAAM,CAAClN,OAAO,CAACyN,EAAE,CAAC,CAAA;IACzB,KAAA;OACH,CAAA;IACDrN,EAAAA,GAAG,CAACS,SAAS,CAACqM,MAAM,GAAG,UAAUO,EAAE,EAAE;QACjC,IAAMrD,EAAE,GAAG,IAAI,CAAA;IACfqD,IAAAA,EAAE,GAAGC,QAAQ,CAACqD,aAAa,CAACtD,EAAE,CAAC,CAAA;IAC/B,IAAA,IAAIuD,GAAG,GAAG5G,EAAE,CAACgB,QAAQ,CAAA;IACrB,IAAA,IAAI,CAAC4F,GAAG,CAACxL,MAAM,EAAE;IACb;IACA,MAAA,IAAID,QAAQ,CAAA;IACZ,MAAA,IAAI,CAACyL,GAAG,CAACzL,QAAQ,IAAIkI,EAAE,EAAE;IACrB;YACAlI,QAAQ,GAAGkI,EAAE,CAACwD,SAAS,CAAA;IAC3B,OAAC,MAAM;IACH;YACA1L,QAAQ,GAAGyL,GAAG,CAACzL,QAAQ,CAAA;IAC3B,OAAA;IACA,MAAA,IAAIA,QAAQ,EAAE;IACV;IACA,QAAA,IAAMC,MAAM,GAAGF,iBAAiB,CAACC,QAAQ,CAAC,CAAA;YAC1CyL,GAAG,CAACxL,MAAM,GAAGA,MAAM,CAAA;IACvB,OAAA;IACJ,KAAA;IACA;IACAkL,IAAAA,cAAc,CAACtG,EAAE,EAAEqD,EAAE,CAAC,CAAA;OACzB,CAAA;IACL;;IChDA,SAASrN,GAAGA,CAACJ,OAAO,EAAE;IAClB,EAAA,IAAI,CAACY,KAAK,CAACZ,OAAO,CAAC,CAAA;IACvB,CAAA;IACAsM,cAAc,CAAClM,GAAG,CAAC,CAAA;IACnB0Q,SAAS,CAAC1Q,GAAG,CAAC,CAAC;IACf8P,cAAc,CAAC9P,GAAG,CAAC,CAAA;IACnBD,aAAa,CAACC,GAAG,CAAC;;;;;;;;"}