{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 标签名 a-aaa\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 命名空间标签 aa:aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 开始标签-捕获标签名\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 结束标签-匹配标签结尾的 </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 匹配标签结束的 >\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配 {{ }} 表达式\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\nfunction parseHTML(html) {\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    let root //树的操作，需要根据开始标签和结束标签产生一个树\r\n    // 如何构建树的父子关系\r\n    let stack = []\r\n    function creatASTElement(tagName, attrs) {\r\n        return {\r\n            tag: tagName,\r\n            attrs,\r\n            children: [],\r\n            parent: null,\r\n            type: 1\r\n        }\r\n    }\r\n    function start(tagName, attrs) {\r\n        let element = creatASTElement(tagName, attrs);\r\n        if (root == null) {\r\n            root = element\r\n        }\r\n        let parent = stack[stack.length - 1]\r\n        if (parent) {\r\n            element.parent = parent //让这个元素记住自己的父亲\r\n            parent.children.push(element) // 让这个元素记住自己的儿子\r\n        }\r\n        stack.push(element)\r\n    }\r\n    function end(tagName) {\r\n        stack.pop()\r\n    }\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, '')\r\n        if (text) {\r\n            let parent = stack[stack.length - 1]\r\n            parent.children.push({\r\n                type: 3,\r\n                text\r\n            })\r\n        }\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], //标签名\r\n                attrs: [],\r\n            };\r\n            advance(start[0].length);\r\n            let end, attr;\r\n            // 如果不是开始标签的结束,那就一直匹配\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n                advance(attr[0].length);\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n                return match\r\n            }\r\n            return false; //不是开始标签\r\n        }\r\n    }\r\n    while (html) {\r\n        // 如果textEnd为0,说明是一个开始标签,或一个结束标签\r\n        let textEnd = html.indexOf(\"<\"); //如果indexOf中的索引是0，则说明是个标签\r\n        if (textEnd === 0) {\r\n            const startTagMatch = parseStartTag();\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue\r\n            }\r\n            let matches\r\n            if (matches = html.match(endTag)) {//不是开始就会走到结束\r\n                end(matches[1])\r\n                advance(matches[0].length)\r\n                continue\r\n            }\r\n        }\r\n        let text\r\n        if (textEnd >= 0) {\r\n            text = html.substring(0, textEnd)\r\n        }\r\n        if (text) {\r\n            advance(text.length)\r\n            chars(text)\r\n        }\r\n    }\r\n    return root\r\n}\r\nfunction getProps(attrs) {\r\n    let str = ''\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        // style = 'color:red;background:blue'\r\n        if (attr.name == 'style') { // style:'{color:red,background:blue}'\r\n            let obj = {}\r\n            attr.value.split(';').reduce((memo, current) => {\r\n                let [key, value] = current.split(':')\r\n                memo[key] = value\r\n                return obj\r\n            }, obj)\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nfunction gen(child) {\r\n    if (child.type === 1) {\r\n        return getCode(child)\r\n    } else {\r\n        let text = child.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})` //不带表达式的\r\n        } else {\r\n            let tokens = []\r\n            let match\r\n            //exec 遇到全局匹配有lastIndex问题，每次匹配前需要将lastIndex置为0\r\n            let startIndex = defaultTagRE.lastIndex = 0\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let endIndex = match.index;//匹配到索引\r\n                if (endIndex > startIndex) {\r\n                    tokens.push(JSON.stringify(text.substring(startIndex, endIndex)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                startIndex = endIndex + match[0].length\r\n            }\r\n            if (startIndex < text.length) { //将最后的尾巴也丢进去\r\n                tokens.push(JSON.stringify(text.slice(startIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction getChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\nfunction getCode(ast) {\r\n    // 字符串拼接，拼接成想要的就行\r\n    let code\r\n    code = `_c('${ast.tag}',${ast.attrs.length ? getProps(ast.attrs) : 'undefined'}${ast.children ? ',' + getChildren(ast.children) : ''})`\r\n    //  _c('div',{className:'xxx'},createTextVnode('hello world'))\r\n    return code\r\n}\r\n// 将模板变成render函数，通过with+new Function()的方式让\r\nexport function compileToFunction(template) {\r\n    // 将template转化成ast语法树\r\n    let ast = parseHTML(template);\r\n    // 通过ast语法树转成render函数\r\n    let code = getCode(ast)\r\n    // 生产render方法（render方法执行后的返回结果就是虚拟dom）\r\n    const render = new Function(`with(this){return ${code}}`)\r\n    return render\r\n}\r\n","// 获取数组的原型\r\nlet oldArrayProto = Array.prototype\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function (...args) {\r\n        const ob = this.__ob__\r\n        const result = oldArrayProto[method].call(this, ...args)\r\n        let inserted\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n            default:\r\n                break\r\n        }\r\n        if(inserted){\r\n            ob.observeArray(inserted)\r\n        }\r\n        // 走到这里\r\n        ob.dep.notify() //数组变化了，通知对应的watcher实现更新\r\n        return result\r\n    }\r\n}) \r\n","let id = 0\r\nexport default class Dep{\r\n    constructor(){\r\n        this.id = id++  //属性的dep要收集watcher\r\n        this.subs = []  //这里存放\r\n    }\r\n    depend(){\r\n        // 这里我们不希望放重复的wacher，而且刚才只是一个单向的关系\r\n        // watcher记录dep\r\n        // this.subs.push(Dep.target)\r\n        Dep.target.addDep(this)  //让watcher记住dep\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n    notify(){\r\n        this.subs.forEach(watcher => watcher.update()) //告诉watcher要更新了\r\n    }\r\n}\r\nlet stack = []\r\nexport function pushTarget(watcher){\r\n    stack.push(watcher)\r\n    Dep.target = watcher\r\n}\r\nexport function popTarget(){\r\n    stack.pop()\r\n    Dep.target = stack[stack.length - 1]\r\n}\r\nDep.target = null","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\nclass Observe {\r\n  constructor(data) {\r\n    this.dep = new Dep(); //所有对象都要增加dep\r\n\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false, // 不可枚举\r\n    });\r\n    if (Array.isArray(data)) {\r\n      // 数组不做劫持，太浪费性能，重写数组方法\r\n      // 需要保留数组原有的特性，并且能够重写部分方法\r\n      data.__proto__ = newArrayProto;\r\n      this.observeArray(data);\r\n    } else {\r\n      this.walk(data);\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 循环对象，对属性依次劫持\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  observeArray(data) {\r\n    // 数组里面的{}需要监测到\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\nfunction dependArray(value) {\r\n  for (let i = 0; i < value.length; i++) {\r\n    value[i].__ob__ && value[i].__ob__.dep.depend();\r\n    if (Array.isArray(value[i])) {\r\n      dependArray(value[i]);\r\n    }\r\n  }\r\n}\r\nexport function defineReactive(target, key, value) {\r\n  //闭包\r\n  let childob = observe(value); //对所有对象都进行属性劫持\r\n  let dep = new Dep(); //每一个属性都有一个dep\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      if (Dep.target) {\r\n        dep.depend(); //让这个属性的收集器记住当前过程\r\n        if (childob) {\r\n          childob.dep.depend();\r\n          if (Array.isArray(value)) {\r\n            dependArray(value);\r\n          }\r\n        }\r\n      }\r\n      return value;\r\n    },\r\n    set(newvalue) {\r\n      if (value === newvalue) return;\r\n      observe(newvalue);\r\n      value = newvalue;\r\n      dep.notify(); //通知更新\r\n    },\r\n  });\r\n}\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== \"object\" || data === null) {\r\n    return null;\r\n  }\r\n  if (data.__ob__ instanceof Observe) {\r\n    //说明这个数据已经被代理\r\n    return data.__ob__;\r\n  }\r\n  // 如果一个对象已经被劫持，那么就不用被劫持\r\n  return new Observe(data);\r\n}\r\n","import Dep, { popTarget, pushTarget } from './dep'\r\n\r\nlet queeu = []\r\nlet has = {}\r\nlet pending = false //防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queeu.slice(0)\r\n    queeu = []\r\n    has = {}\r\n    pending = false\r\n    flushQueue.forEach(q => q.run()) //在刷新的过程中可能还有新的watcher，重新放到queue中\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\nfunction flushCallbacks() {\r\n    waiting = false\r\n    let cbs = callbacks.slice(0)\r\n    callbacks = []\r\n    cbs.forEach(cb => cb())\r\n}\r\n// nextTick采用的是优雅降级的方式\r\nlet timeFunc\r\nif (Promise) {\r\n    timeFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if (MutationObserver) {\r\n    let observer = new MutationObserver(flushCallbacks)\r\n    let textNode = createTextNode(1)\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    })\r\n    timeFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if (setImmediate) {\r\n    timeFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else {\r\n    setTimeout(() => {\r\n        flushCallbacks()\r\n    }, 0);\r\n}\r\nexport function nextTick(cb) { //先内部的还是先用户的？\r\n    callbacks.push(cb)\r\n    if (!waiting) {\r\n        timeFunc() //最后一起刷新\r\n    }\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id\r\n    if (!has[id]) {\r\n        queeu.push(watcher)\r\n        has[id] = true\r\n        // 不管update执行多少次，但是最终只执行一次\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue);\r\n            pending = true\r\n        }\r\n    }\r\n}\r\n\r\nlet id = 0\r\nclass Watcher {\r\n    constructor(vm, fn, options) { // 不同组件有不同watcher\r\n        this.id = id++\r\n        this.renderWatcher = options //是一个渲染过程\r\n        this.getter = fn // getter意味着调用这个函数会发生取值操作\r\n        this.deps = [] //后续我们实现计算属性和清理工作会用到\r\n        this.depsId = new Set()\r\n        this.lazy = options.lazy\r\n        this.dirty = this.lazy //缓存\r\n        this.vm = vm\r\n        this.value = ''\r\n        this.lazy ? undefined : this.get()\r\n    }\r\n    evaluate() {\r\n        this.value = this.get()\r\n        this.dirty = false\r\n    }\r\n    get() {\r\n        pushTarget(this) //静态属性只有一份\r\n        let value = this.getter.call(this.vm) //会去vm上取值\r\n        popTarget()\r\n        return value\r\n    }\r\n    addDep(dep) { //一个组件对应多个属性，重复的属性也不用记录\r\n        let id = dep.id\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep)\r\n            this.depsId.add(id) //watcher已经记住dep，并且已经去重\r\n            dep.addSub(this)\r\n        }\r\n    }\r\n    depend(){\r\n        let i = this.deps.length\r\n        while(i--){\r\n            this.deps[i].depend() //让计算属性watcher也收集渲染过程\r\n        }\r\n    }\r\n    update() {\r\n        if(this.lazy){\r\n            //如果是计算属性,依赖的值变化了，就标值计算属性是脏值\r\n            this.dirty = true\r\n        }else{\r\n            queueWatcher(this) //把当前的watcher暂存起来\r\n        }\r\n    }\r\n    run() {\r\n        this.get()\r\n    }\r\n}\r\n// 需要给每个属性增加一个dep，目的就是收集watcher\r\n// 一个组件中有多少属性（n个属性对应一个组件） n个dep对应一个watcher\r\n// 1个属性对应多个组件 1个dep对应多个watcher\r\n// 多对多的关系\r\nexport default Watcher","import { observe } from \"./observe/index\";\r\nimport Watcher from \"./observe/watcher\";\r\nimport Dep from \"./observe/dep\";\r\nexport function initState(vm) {\r\n    // 对数据进行劫持\r\n    const opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n}\r\nfunction Proxy(vm, target, key) {\r\n    // 使用时候的劫持\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newvalue) {\r\n            vm[target][key] = newvalue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    // 对data进行劫持\r\n    let data = vm.$options.data;\r\n    data = typeof data == \"function\" ? data.call(vm) : data;\r\n    vm._data = data;\r\n    // 将vm.data 用vm代理\r\n    for (let key in data) {\r\n        Proxy(vm, \"_data\", key);\r\n    }\r\n    observe(data);\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed\r\n    const watchers = vm.computedWatcher = {} //将计算属性watcher保存到vm上\r\n    for (let key in computed) {\r\n        let userDef = computed[key]\r\n        // 我们需要监控计算属性中get的变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true })\r\n        defineComputed(vm, key, userDef)\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    const setter = userDef.set || (() => { })\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGeeter(key),\r\n        set: setter\r\n    })\r\n}\r\nfunction createComputedGeeter(key) {\r\n    // 我们需要监测是否要执行这个getter\r\n    return function(){\r\n        const watcher = this.computedWatcher[key]\r\n        if(watcher.dirty){\r\n            // 如果是脏的，则执行\r\n            watcher.evaluate()\r\n        }\r\n        if(Dep.target){ //计算属性出栈后还有渲染过程，我应该让计算属性watcher里面的属性也去收集上一层watcher\r\n            watcher.depend()\r\n        }\r\n        return watcher.value\r\n    }\r\n}","export function createElement(vm,tag,data={},...children){\r\n    return vnode(vm,tag,data,children,data.key,null)\r\n}\r\nexport function createTextNode(vm,text){\r\n    return vnode(vm,null,null,null,null,text)\r\n}\r\nfunction vnode(vm,tag,data,children,key,text){\r\n    return {\r\n        vm,tag,data,children,key,text\r\n    }\r\n}","function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if (typeof tag === \"string\") {\r\n        //元素\r\n        vnode.el = document.createElement(tag); //后续我们需要diff算法，拿虚拟节点比对后更新dom\r\n        patchProps(vnode.el, data);\r\n        children.forEach((children) => {\r\n            // 递归渲染\r\n            vnode.el.appendChild(createElm(children));\r\n        });\r\n    } else {\r\n        //文本\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el; //从根虚拟节点创建真实节点\r\n}\r\nfunction patchProps(el, props) {\r\n    for (let key in props) {\r\n        if (key === \"style\") {\r\n            for (let styleName in props[key]) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\nexport function patch(oldVnode, vnode) {\r\n    const isRealElement = oldVnode && oldVnode.nodeType; // 如果有说明他是一个元素\r\n    if (isRealElement) {\r\n        const oldElm = oldVnode;\r\n        // 需要获取父节点，将当前节点的下一个元素作为参照物将他插入，之后删除老节点\r\n        const parentNode = oldElm.parentNode;\r\n        let el = createElm(vnode);\r\n        parentNode.insertBefore(el, oldElm.nextSibling);\r\n        parentNode.removeChild(oldElm);\r\n        return el;\r\n    } else {\r\n        // diff算法\r\n    }\r\n}\r\n// 每次更新页面的话，dom结果是不会变的，我调用render方法时，数据变化了会根据数据渲染成新的虚拟节点，用新的虚拟节点渲染dom\r\n","import Watcher from \"./observe/watcher\"\r\nimport { createElement } from \"./vdom/index\"\r\nimport { createTextNode } from \"./vdom/index\"\r\nimport { patch } from \"./vdom/patch\"\r\n\r\nexport function lifeCycleMixin(Vue) {\r\n    Vue.prototype._c = function () {\r\n        // 创造对应的虚拟节点，进行渲染\r\n        return createElement(this,...arguments)\r\n    }\r\n    Vue.prototype._v = function () {\r\n        return createTextNode(this,...arguments)\r\n    }\r\n    Vue.prototype._s = function (value) { //将数据转化成字符串，因为使用变量对应的结果可能是一个对象\r\n        if(typeof value === 'object' && value !== null){\r\n            return JSON.stringify(value)\r\n        }\r\n        return value\r\n    }\r\n    Vue.prototype._render = function () {\r\n        const vm = this\r\n        const render = vm.$options.render\r\n        let vnode = render.call(vm)\r\n        return vnode\r\n    }\r\n    Vue.prototype._update = function (vnode) { //将虚拟节点变成真实节点\r\n        // 将Vnode渲染到el元素中\r\n        const vm = this\r\n        vm.$el = patch(vm.$el,vnode) // 可以初始化渲染，后续更新也走这个patch方法\r\n    }\r\n}\r\nexport function mountComponent(vm, el) {\r\n    //实现页面的挂载流程\r\n    // 先将el挂载到实例上\r\n    vm.$el = el\r\n    const updataComponent = () => {\r\n        // 需要调用生成的render函数获取到虚拟节点 -》 生成真实的dom\r\n        vm._update(vm._render())\r\n    }\r\n    new Watcher(vm,updataComponent,true) \r\n    //如果稍后数据变化，也调用这个函数重新执行\r\n    // 观察者模式\r\n}","import { compileToFunction } from \"./compiler/index\";\r\nimport { initState } from \"./state\";\r\nimport {mountComponent} from './lifecycle'\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        //用于初始化操作\r\n        const vm = this;\r\n        vm.$options = options; //将用户的选项挂载到实例上\r\n        // 初始化状态，初始化计算属性，watcher\r\n        initState(vm);\r\n        // todo...\r\n        if (options.el) {\r\n            vm.$mount(options.el);\r\n        }\r\n    };\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        if (!ops.render) {\r\n            //先查找有没有render函数\r\n            let template;\r\n            if (!ops.template && el) {\r\n                //如果没有render函数有el\r\n                template = el.outerHTML;\r\n            } else {\r\n                // 写了templat，就用写了的template\r\n                if(el){\r\n                    template = ops.template;\r\n                }\r\n            }\r\n            if(template){\r\n                // 这里需要对模板进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n            }\r\n        }\r\n        //将实例挂载到el上\r\n        mountComponent(vm,el)\r\n    };\r\n}\r\n","import { initMixin } from \"./init\";\r\nimport { lifeCycleMixin } from \"./lifecycle\";\r\nimport { nextTick } from \"./observe/watcher\";\r\nfunction Vue(options) {\r\n    this._init(options);\r\n}\r\nVue.prototype.$nextTick = nextTick;\r\ninitMixin(Vue); //扩展了init方法\r\nlifeCycleMixin(Vue);\r\nexport default Vue;\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","parseHTML","html","advance","n","substring","root","stack","creatASTElement","tagName","attrs","tag","children","parent","type","start","element","length","push","end","pop","chars","text","replace","parseStartTag","match","attr","name","value","textEnd","indexOf","startTagMatch","matches","getProps","str","_loop","i","obj","split","reduce","memo","current","_current$split","_current$split2","_slicedToArray","key","JSON","stringify","slice","gen","child","getCode","test","tokens","startIndex","lastIndex","exec","endIndex","index","trim","join","getChildren","map","ast","code","compileToFunction","template","render","Function","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","ob","__ob__","_len","arguments","args","_key","result","call","apply","inserted","observeArray","dep","notify","id","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","update","pushTarget","popTarget","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","childob","get","set","newvalue","_typeof","queeu","has","pending","flushSchedulerQueue","flushQueue","q","run","callbacks","waiting","flushCallbacks","cbs","cb","timeFunc","Promise","resolve","then","MutationObserver","observer","textNode","createTextNode","characterData","textContent","setImmediate","setTimeout","nextTick","queueWatcher","Watcher","vm","fn","options","renderWatcher","getter","deps","depsId","Set","lazy","dirty","undefined","evaluate","add","initState","opts","$options","initData","computed","initComputed","Proxy","_data","watchers","computedWatcher","userDef","defineComputed","setter","createComputedGeeter","createElement","vnode","createElm","el","document","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVnode","isRealElement","nodeType","oldElm","parentNode","insertBefore","nextSibling","removeChild","lifeCycleMixin","Vue","_c","_v","_s","_render","_update","$el","mountComponent","updataComponent","initMixin","_init","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}